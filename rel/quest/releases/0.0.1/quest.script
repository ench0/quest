%% script generated at {2017,4,27} {18,8,19}
{script,
    {"quest","0.0.1"},
    [{preLoaded,
         [erl_prim_loader,erl_tracer,erlang,erts_code_purger,
          erts_dirty_process_code_checker,erts_internal,
          erts_literal_area_collector,init,otp_ring0,prim_eval,prim_file,
          prim_inet,prim_zip,zlib]},
     {progress,preloaded},
     {path,["$ROOT/lib/kernel-5.1.1/ebin","$ROOT/lib/stdlib-3.2/ebin"]},
     {primLoad,
         [error_handler,application,application_controller,application_master,
          code,code_server,erl_eval,erl_lint,erl_parse,error_logger,ets,file,
          filename,file_server,file_io_server,gen,gen_event,gen_server,heart,
          kernel,lists,proc_lib,supervisor]},
     {kernel_load_completed},
     {progress,kernel_load_completed},
     {path,["$ROOT/lib/kernel-5.1.1/ebin"]},
     {primLoad,
         [application_starter,auth,disk_log,disk_log_1,disk_log_server,
          disk_log_sup,dist_ac,dist_util,erl_boot_server,erl_ddll,
          erl_distribution,erl_epmd,erl_reply,erts_debug,gen_sctp,gen_tcp,
          gen_udp,global,global_group,global_search,group,hipe_unified_loader,
          inet,inet6_sctp,inet6_tcp,inet6_tcp_dist,inet6_udp,inet_config,
          inet_db,inet_dns,inet_gethost_native,inet_hosts,inet_parse,inet_res,
          inet_sctp,inet_tcp,inet_tcp_dist,inet_udp,kernel_config,local_tcp,
          local_udp,net,net_adm,net_kernel,os,pg2,ram_file,rpc,seq_trace,
          standard_error,user,user_drv,user_sup,wrap_log_reader]},
     {path,["$ROOT/lib/stdlib-3.2/ebin"]},
     {primLoad,
         [array,base64,beam_lib,binary,c,calendar,dets,dets_server,dets_sup,
          dets_utils,dets_v8,dets_v9,dict,digraph,digraph_utils,edlin,
          edlin_expand,epp,erl_anno,erl_bits,erl_compile,erl_expand_records,
          erl_internal,erl_posix_msg,erl_pp,erl_scan,erl_tar,
          error_logger_file_h,error_logger_tty_h,escript,eval_bits,
          file_sorter,filelib,gb_sets,gb_trees,gen_fsm,gen_statem,io,io_lib,
          io_lib_format,io_lib_fread,io_lib_pretty,lib,log_mf_h,maps,math,
          ms_transform,orddict,ordsets,otp_internal,pool,proplists,qlc,qlc_pt,
          queue,rand,random,re,sets,shell,shell_default,slave,sofs,string,
          supervisor_bridge,sys,timer,unicode,win32reg,zip]},
     {path,["$ROOT/lib/poolboy-1.5.1/ebin"]},
     {primLoad,[poolboy,poolboy_sup,poolboy_worker]},
     {path,["$ROOT/lib/compiler-7.0.3/ebin"]},
     {primLoad,
         [beam_a,beam_asm,beam_block,beam_bool,beam_bs,beam_bsm,beam_clean,
          beam_dead,beam_dict,beam_disasm,beam_except,beam_flatten,beam_jump,
          beam_listing,beam_opcodes,beam_peep,beam_receive,beam_reorder,
          beam_split,beam_trim,beam_type,beam_utils,beam_validator,beam_z,
          cerl,cerl_clauses,cerl_inline,cerl_sets,cerl_trees,compile,core_lib,
          core_lint,core_parse,core_pp,core_scan,erl_bifs,rec_env,
          sys_core_dsetel,sys_core_fold,sys_core_fold_lists,sys_core_inline,
          sys_pre_attributes,sys_pre_expand,v3_codegen,v3_core,v3_kernel,
          v3_kernel_pp,v3_life]},
     {path,["$ROOT/lib/elixir-1.4.0/ebin"]},
     {primLoad,
         ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
          'Elixir.Application','Elixir.ArgumentError',
          'Elixir.ArithmeticError','Elixir.Atom','Elixir.BadArityError',
          'Elixir.BadBooleanError','Elixir.BadFunctionError',
          'Elixir.BadMapError','Elixir.BadStructError','Elixir.Base',
          'Elixir.Behaviour','Elixir.Bitwise','Elixir.Calendar',
          'Elixir.Calendar.ISO','Elixir.CaseClauseError','Elixir.Code',
          'Elixir.Code.LoadError','Elixir.Collectable',
          'Elixir.Collectable.BitString','Elixir.Collectable.File.Stream',
          'Elixir.Collectable.HashDict','Elixir.Collectable.HashSet',
          'Elixir.Collectable.IO.Stream','Elixir.Collectable.List',
          'Elixir.Collectable.Map','Elixir.Collectable.MapSet',
          'Elixir.CompileError','Elixir.CondClauseError','Elixir.Date',
          'Elixir.DateTime','Elixir.Dict','Elixir.Enum',
          'Elixir.Enum.EmptyError','Elixir.Enum.OutOfBoundsError',
          'Elixir.Enumerable','Elixir.Enumerable.File.Stream',
          'Elixir.Enumerable.Function','Elixir.Enumerable.GenEvent.Stream',
          'Elixir.Enumerable.HashDict','Elixir.Enumerable.HashSet',
          'Elixir.Enumerable.IO.Stream','Elixir.Enumerable.List',
          'Elixir.Enumerable.Map','Elixir.Enumerable.MapSet',
          'Elixir.Enumerable.Range','Elixir.Enumerable.Stream',
          'Elixir.ErlangError','Elixir.Exception','Elixir.File',
          'Elixir.File.CopyError','Elixir.File.Error','Elixir.File.Stat',
          'Elixir.File.Stream','Elixir.Float','Elixir.FunctionClauseError',
          'Elixir.GenEvent','Elixir.GenEvent.Stream','Elixir.GenServer',
          'Elixir.HashDict','Elixir.HashSet','Elixir.IO','Elixir.IO.ANSI',
          'Elixir.IO.ANSI.Docs','Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
          'Elixir.IO.StreamError','Elixir.Inspect','Elixir.Inspect.Algebra',
          'Elixir.Inspect.Any','Elixir.Inspect.Atom',
          'Elixir.Inspect.BitString','Elixir.Inspect.Date',
          'Elixir.Inspect.Error','Elixir.Inspect.Float',
          'Elixir.Inspect.Function','Elixir.Inspect.HashDict',
          'Elixir.Inspect.HashSet','Elixir.Inspect.Integer',
          'Elixir.Inspect.List','Elixir.Inspect.Map','Elixir.Inspect.MapSet',
          'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
          'Elixir.Inspect.PID','Elixir.Inspect.Port','Elixir.Inspect.Range',
          'Elixir.Inspect.Reference','Elixir.Inspect.Regex',
          'Elixir.Inspect.Stream','Elixir.Inspect.Time',
          'Elixir.Inspect.Tuple','Elixir.Inspect.Version',
          'Elixir.Inspect.Version.Requirement','Elixir.Integer',
          'Elixir.Kernel','Elixir.Kernel.CLI','Elixir.Kernel.ErrorHandler',
          'Elixir.Kernel.LexicalTracker','Elixir.Kernel.ParallelCompiler',
          'Elixir.Kernel.ParallelRequire','Elixir.Kernel.SpecialForms',
          'Elixir.Kernel.Typespec','Elixir.Kernel.Utils','Elixir.KeyError',
          'Elixir.Keyword','Elixir.List','Elixir.List.Chars',
          'Elixir.List.Chars.Atom','Elixir.List.Chars.BitString',
          'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
          'Elixir.List.Chars.List','Elixir.Macro','Elixir.Macro.Env',
          'Elixir.Map','Elixir.MapSet','Elixir.MatchError','Elixir.Module',
          'Elixir.Module.LocalsTracker','Elixir.NaiveDateTime','Elixir.Node',
          'Elixir.OptionParser','Elixir.OptionParser.ParseError',
          'Elixir.Path','Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
          'Elixir.Protocol','Elixir.Protocol.UndefinedError','Elixir.Range',
          'Elixir.Record','Elixir.Record.Extractor','Elixir.Regex',
          'Elixir.Regex.CompileError','Elixir.Registry',
          'Elixir.Registry.Partition','Elixir.Registry.Supervisor',
          'Elixir.RuntimeError','Elixir.Set','Elixir.Stream',
          'Elixir.Stream.Reducers','Elixir.String','Elixir.String.Break',
          'Elixir.String.Casing','Elixir.String.Chars',
          'Elixir.String.Chars.Atom','Elixir.String.Chars.BitString',
          'Elixir.String.Chars.Date','Elixir.String.Chars.DateTime',
          'Elixir.String.Chars.Float','Elixir.String.Chars.Integer',
          'Elixir.String.Chars.List','Elixir.String.Chars.NaiveDateTime',
          'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
          'Elixir.String.Chars.Version',
          'Elixir.String.Chars.Version.Requirement',
          'Elixir.String.Normalizer','Elixir.String.Unicode',
          'Elixir.StringIO','Elixir.Supervisor','Elixir.Supervisor.Default',
          'Elixir.Supervisor.Spec','Elixir.SyntaxError','Elixir.System',
          'Elixir.SystemLimitError','Elixir.Task','Elixir.Task.Supervised',
          'Elixir.Task.Supervisor','Elixir.Time','Elixir.TokenMissingError',
          'Elixir.TryClauseError','Elixir.Tuple','Elixir.URI',
          'Elixir.UndefinedFunctionError','Elixir.UnicodeConversionError',
          'Elixir.Version','Elixir.Version.InvalidRequirementError',
          'Elixir.Version.InvalidVersionError','Elixir.Version.Parser',
          'Elixir.Version.Parser.DSL','Elixir.Version.Requirement',
          'Elixir.WithClauseError',elixir,elixir_aliases,elixir_bitstring,
          elixir_bootstrap,elixir_clauses,elixir_code_server,elixir_compiler,
          elixir_config,elixir_def,elixir_def_defaults,elixir_def_overridable,
          elixir_dispatch,elixir_env,elixir_errors,elixir_exp,
          elixir_exp_clauses,elixir_fn,elixir_for,elixir_import,
          elixir_interpolation,elixir_lexical,elixir_locals,elixir_map,
          elixir_module,elixir_parser,elixir_quote,elixir_rewrite,
          elixir_scope,elixir_sup,elixir_tokenizer,elixir_translator,
          elixir_try,elixir_utils,elixir_with]},
     {path,["$ROOT/lib/decimal-1.3.1/ebin"]},
     {primLoad,
         ['Elixir.Decimal','Elixir.Decimal.Context','Elixir.Decimal.Error',
          'Elixir.Inspect.Decimal','Elixir.String.Chars.Decimal']},
     {path,["$ROOT/lib/logger-1.4.0/ebin"]},
     {primLoad,
         ['Elixir.Logger','Elixir.Logger.App',
          'Elixir.Logger.Backends.Console','Elixir.Logger.Config',
          'Elixir.Logger.ErrorHandler','Elixir.Logger.Formatter',
          'Elixir.Logger.Translator','Elixir.Logger.Utils',
          'Elixir.Logger.Watcher']},
     {path,["$ROOT/lib/ecto-2.1.4/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Ecto.Adapters.SQL.Stream','Elixir.Ecto',
          'Elixir.Ecto.Adapter','Elixir.Ecto.Adapter.Migration',
          'Elixir.Ecto.Adapter.Storage','Elixir.Ecto.Adapter.Structure',
          'Elixir.Ecto.Adapter.Transaction','Elixir.Ecto.Adapters.MySQL',
          'Elixir.Ecto.Adapters.Postgres',
          'Elixir.Ecto.Adapters.Postgres.Connection',
          'Elixir.Ecto.Adapters.Postgres.Date',
          'Elixir.Ecto.Adapters.Postgres.Time',
          'Elixir.Ecto.Adapters.Postgres.Timestamp',
          'Elixir.Ecto.Adapters.Postgres.TimestampTZ',
          'Elixir.Ecto.Adapters.Postgres.TypeModule',
          'Elixir.Ecto.Adapters.SQL','Elixir.Ecto.Adapters.SQL.Connection',
          'Elixir.Ecto.Adapters.SQL.Sandbox',
          'Elixir.Ecto.Adapters.SQL.Sandbox.Connection',
          'Elixir.Ecto.Adapters.SQL.Sandbox.Pool',
          'Elixir.Ecto.Adapters.SQL.Stream','Elixir.Ecto.Application',
          'Elixir.Ecto.Association','Elixir.Ecto.Association.BelongsTo',
          'Elixir.Ecto.Association.Has','Elixir.Ecto.Association.HasThrough',
          'Elixir.Ecto.Association.ManyToMany',
          'Elixir.Ecto.Association.NotLoaded','Elixir.Ecto.CastError',
          'Elixir.Ecto.ChangeError','Elixir.Ecto.Changeset',
          'Elixir.Ecto.Changeset.Relation','Elixir.Ecto.ConstraintError',
          'Elixir.Ecto.DataType','Elixir.Ecto.DataType.Any',
          'Elixir.Ecto.DataType.Date','Elixir.Ecto.DataType.DateTime',
          'Elixir.Ecto.DataType.Ecto.Date',
          'Elixir.Ecto.DataType.Ecto.DateTime',
          'Elixir.Ecto.DataType.Ecto.Time','Elixir.Ecto.DataType.List',
          'Elixir.Ecto.DataType.NaiveDateTime','Elixir.Ecto.DataType.Time',
          'Elixir.Ecto.Date','Elixir.Ecto.DateTime',
          'Elixir.Ecto.DateTime.Utils','Elixir.Ecto.Embedded',
          'Elixir.Ecto.InvalidChangesetError','Elixir.Ecto.InvalidURLError',
          'Elixir.Ecto.LogEntry','Elixir.Ecto.Migration',
          'Elixir.Ecto.Migration.Constraint','Elixir.Ecto.Migration.Index',
          'Elixir.Ecto.Migration.Reference','Elixir.Ecto.Migration.Runner',
          'Elixir.Ecto.Migration.SchemaMigration',
          'Elixir.Ecto.Migration.Supervisor','Elixir.Ecto.Migration.Table',
          'Elixir.Ecto.MigrationError','Elixir.Ecto.Migrator',
          'Elixir.Ecto.Multi','Elixir.Ecto.MultipleResultsError',
          'Elixir.Ecto.NoPrimaryKeyFieldError',
          'Elixir.Ecto.NoPrimaryKeyValueError','Elixir.Ecto.NoResultsError',
          'Elixir.Ecto.Query','Elixir.Ecto.Query.API',
          'Elixir.Ecto.Query.BooleanExpr','Elixir.Ecto.Query.Builder',
          'Elixir.Ecto.Query.Builder.Distinct',
          'Elixir.Ecto.Query.Builder.Dynamic',
          'Elixir.Ecto.Query.Builder.Filter','Elixir.Ecto.Query.Builder.From',
          'Elixir.Ecto.Query.Builder.GroupBy',
          'Elixir.Ecto.Query.Builder.Join',
          'Elixir.Ecto.Query.Builder.LimitOffset',
          'Elixir.Ecto.Query.Builder.Lock',
          'Elixir.Ecto.Query.Builder.OrderBy',
          'Elixir.Ecto.Query.Builder.Preload',
          'Elixir.Ecto.Query.Builder.Select',
          'Elixir.Ecto.Query.Builder.Update','Elixir.Ecto.Query.CastError',
          'Elixir.Ecto.Query.CompileError','Elixir.Ecto.Query.DynamicExpr',
          'Elixir.Ecto.Query.JoinExpr','Elixir.Ecto.Query.Planner',
          'Elixir.Ecto.Query.QueryExpr','Elixir.Ecto.Query.SelectExpr',
          'Elixir.Ecto.Query.Tagged','Elixir.Ecto.QueryError',
          'Elixir.Ecto.Queryable','Elixir.Ecto.Queryable.Atom',
          'Elixir.Ecto.Queryable.BitString',
          'Elixir.Ecto.Queryable.Ecto.Query',
          'Elixir.Ecto.Queryable.Ecto.SubQuery','Elixir.Ecto.Queryable.Tuple',
          'Elixir.Ecto.Repo','Elixir.Ecto.Repo.Assoc',
          'Elixir.Ecto.Repo.Preloader','Elixir.Ecto.Repo.Queryable',
          'Elixir.Ecto.Repo.Schema','Elixir.Ecto.Repo.Supervisor',
          'Elixir.Ecto.Schema','Elixir.Ecto.Schema.Metadata',
          'Elixir.Ecto.StaleEntryError','Elixir.Ecto.SubQuery',
          'Elixir.Ecto.SubQueryError','Elixir.Ecto.Time','Elixir.Ecto.Type',
          'Elixir.Ecto.UUID','Elixir.Enumerable.Ecto.Adapters.SQL.Stream',
          'Elixir.Inspect.Ecto.Association.NotLoaded',
          'Elixir.Inspect.Ecto.Changeset','Elixir.Inspect.Ecto.Date',
          'Elixir.Inspect.Ecto.DateTime','Elixir.Inspect.Ecto.Query',
          'Elixir.Inspect.Ecto.Query.DynamicExpr',
          'Elixir.Inspect.Ecto.Schema.Metadata','Elixir.Inspect.Ecto.Time',
          'Elixir.Mix.Ecto','Elixir.Mix.Tasks.Ecto',
          'Elixir.Mix.Tasks.Ecto.Create','Elixir.Mix.Tasks.Ecto.Drop',
          'Elixir.Mix.Tasks.Ecto.Dump','Elixir.Mix.Tasks.Ecto.Gen.Migration',
          'Elixir.Mix.Tasks.Ecto.Gen.Repo','Elixir.Mix.Tasks.Ecto.Load',
          'Elixir.Mix.Tasks.Ecto.Migrate','Elixir.Mix.Tasks.Ecto.Migrations',
          'Elixir.Mix.Tasks.Ecto.Rollback','Elixir.Poison.Encoder.Decimal',
          'Elixir.Poison.Encoder.Ecto.Association.NotLoaded',
          'Elixir.Poison.Encoder.Ecto.Date',
          'Elixir.Poison.Encoder.Ecto.DateTime',
          'Elixir.Poison.Encoder.Ecto.Time','Elixir.String.Chars.Ecto.Date',
          'Elixir.String.Chars.Ecto.DateTime',
          'Elixir.String.Chars.Ecto.Time']},
     {path,["$ROOT/lib/mime-1.1.0/ebin"]},
     {primLoad,['Elixir.MIME']},
     {path,["$ROOT/lib/crypto-3.7.2/ebin"]},
     {primLoad,[crypto,crypto_ec_curves]},
     {path,["$ROOT/lib/plug-1.3.5/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Plug.Conn','Elixir.Inspect.Plug.Conn',
          'Elixir.Plug','Elixir.Plug.Adapters.Cowboy',
          'Elixir.Plug.Adapters.Cowboy.Conn',
          'Elixir.Plug.Adapters.Cowboy.Handler',
          'Elixir.Plug.Adapters.Test.Conn','Elixir.Plug.Adapters.Translator',
          'Elixir.Plug.BadRequestError','Elixir.Plug.Builder',
          'Elixir.Plug.CSRFProtection',
          'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
          'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
          'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
          'Elixir.Plug.Conn.AlreadySentError',
          'Elixir.Plug.Conn.CookieOverflowError','Elixir.Plug.Conn.Cookies',
          'Elixir.Plug.Conn.InvalidHeaderError',
          'Elixir.Plug.Conn.InvalidQueryError',
          'Elixir.Plug.Conn.NotSentError','Elixir.Plug.Conn.Query',
          'Elixir.Plug.Conn.Status','Elixir.Plug.Conn.Unfetched',
          'Elixir.Plug.Conn.Utils','Elixir.Plug.Conn.WrapperError',
          'Elixir.Plug.Crypto','Elixir.Plug.Crypto.KeyGenerator',
          'Elixir.Plug.Crypto.MessageEncryptor',
          'Elixir.Plug.Crypto.MessageVerifier','Elixir.Plug.Debugger',
          'Elixir.Plug.ErrorHandler','Elixir.Plug.Exception',
          'Elixir.Plug.Exception.Any','Elixir.Plug.HTML','Elixir.Plug.Head',
          'Elixir.Plug.Logger','Elixir.Plug.MIME',
          'Elixir.Plug.MethodOverride','Elixir.Plug.Parsers',
          'Elixir.Plug.Parsers.BadEncodingError','Elixir.Plug.Parsers.JSON',
          'Elixir.Plug.Parsers.MULTIPART','Elixir.Plug.Parsers.ParseError',
          'Elixir.Plug.Parsers.RequestTooLargeError',
          'Elixir.Plug.Parsers.URLENCODED',
          'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
          'Elixir.Plug.RequestId','Elixir.Plug.Router',
          'Elixir.Plug.Router.InvalidSpecError','Elixir.Plug.Router.Utils',
          'Elixir.Plug.SSL','Elixir.Plug.Session',
          'Elixir.Plug.Session.COOKIE','Elixir.Plug.Session.ETS',
          'Elixir.Plug.Session.Store','Elixir.Plug.Static',
          'Elixir.Plug.Static.InvalidPathError','Elixir.Plug.Supervisor',
          'Elixir.Plug.Test','Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
          'Elixir.Plug.UploadError']},
     {path,["$ROOT/lib/phoenix_ecto-3.2.3/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.Ecto','Elixir.Phoenix.Ecto.SQL.Sandbox',
          'Elixir.Phoenix.HTML.FormData.Ecto.Changeset',
          'Elixir.Phoenix.HTML.Safe.Decimal',
          'Elixir.Phoenix.HTML.Safe.Ecto.Date',
          'Elixir.Phoenix.HTML.Safe.Ecto.DateTime',
          'Elixir.Phoenix.HTML.Safe.Ecto.Time',
          'Elixir.Plug.Exception.Ecto.CastError',
          'Elixir.Plug.Exception.Ecto.InvalidChangesetError',
          'Elixir.Plug.Exception.Ecto.NoResultsError',
          'Elixir.Plug.Exception.Ecto.Query.CastError']},
     {path,["$ROOT/lib/distillery-0.10.1/ebin"]},
     {primLoad,
         ['Elixir.Distillery.IO','Elixir.Mix.Releases.App',
          'Elixir.Mix.Releases.Appup','Elixir.Mix.Releases.Archiver',
          'Elixir.Mix.Releases.Assembler','Elixir.Mix.Releases.Config',
          'Elixir.Mix.Releases.Config.LoadError',
          'Elixir.Mix.Releases.Environment','Elixir.Mix.Releases.Logger',
          'Elixir.Mix.Releases.Overlays','Elixir.Mix.Releases.Plugin',
          'Elixir.Mix.Releases.Profile','Elixir.Mix.Releases.Release',
          'Elixir.Mix.Releases.Utils','Elixir.Mix.Tasks.Release',
          'Elixir.Mix.Tasks.Release.Clean','Elixir.Mix.Tasks.Release.Init']},
     {path,["$ROOT/lib/connection-1.0.4/ebin"]},
     {primLoad,['Elixir.Connection']},
     {path,["$ROOT/lib/db_connection-1.1.2/ebin"]},
     {primLoad,
         ['Elixir.DBConnection','Elixir.DBConnection.App',
          'Elixir.DBConnection.Backoff','Elixir.DBConnection.Connection',
          'Elixir.DBConnection.ConnectionError',
          'Elixir.DBConnection.LogEntry','Elixir.DBConnection.Ownership',
          'Elixir.DBConnection.Ownership.Manager',
          'Elixir.DBConnection.Ownership.Pool',
          'Elixir.DBConnection.Ownership.PoolSupervisor',
          'Elixir.DBConnection.Ownership.Proxy',
          'Elixir.DBConnection.Ownership.ProxySupervisor',
          'Elixir.DBConnection.OwnershipError','Elixir.DBConnection.Pool',
          'Elixir.DBConnection.Poolboy','Elixir.DBConnection.Poolboy.Worker',
          'Elixir.DBConnection.PrepareStream','Elixir.DBConnection.Query',
          'Elixir.DBConnection.Sojourn','Elixir.DBConnection.Sojourn.Broker',
          'Elixir.DBConnection.Sojourn.Pool',
          'Elixir.DBConnection.Sojourn.Regulator',
          'Elixir.DBConnection.Sojourn.Starter',
          'Elixir.DBConnection.Sojourn.Supervisor',
          'Elixir.DBConnection.SojournError','Elixir.DBConnection.Stream',
          'Elixir.DBConnection.Task','Elixir.DBConnection.Watcher',
          'Elixir.Enumerable.DBConnection.PrepareStream',
          'Elixir.Enumerable.DBConnection.Stream']},
     {path,["$ROOT/lib/postgrex-0.13.2/ebin"]},
     {primLoad,
         ['Elixir.Collectable.Postgrex.Stream',
          'Elixir.DBConnection.Query.Postgrex.Copy',
          'Elixir.DBConnection.Query.Postgrex.Parameters',
          'Elixir.DBConnection.Query.Postgrex.Query',
          'Elixir.DBConnection.Query.Postgrex.Stream',
          'Elixir.Enumerable.Postgrex.Stream','Elixir.Postgrex',
          'Elixir.Postgrex.App','Elixir.Postgrex.BinaryExtension',
          'Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Box',
          'Elixir.Postgrex.CIDR','Elixir.Postgrex.Circle',
          'Elixir.Postgrex.Copy','Elixir.Postgrex.CopyData',
          'Elixir.Postgrex.CopyDone','Elixir.Postgrex.Cursor',
          'Elixir.Postgrex.Date','Elixir.Postgrex.DefaultTypes',
          'Elixir.Postgrex.Error','Elixir.Postgrex.ErrorCode',
          'Elixir.Postgrex.Extension','Elixir.Postgrex.Extensions.Array',
          'Elixir.Postgrex.Extensions.BitString',
          'Elixir.Postgrex.Extensions.Bool','Elixir.Postgrex.Extensions.Box',
          'Elixir.Postgrex.Extensions.CIDR',
          'Elixir.Postgrex.Extensions.Circle',
          'Elixir.Postgrex.Extensions.Date',
          'Elixir.Postgrex.Extensions.Float4',
          'Elixir.Postgrex.Extensions.Float8',
          'Elixir.Postgrex.Extensions.HStore',
          'Elixir.Postgrex.Extensions.INET','Elixir.Postgrex.Extensions.Int2',
          'Elixir.Postgrex.Extensions.Int4','Elixir.Postgrex.Extensions.Int8',
          'Elixir.Postgrex.Extensions.Interval',
          'Elixir.Postgrex.Extensions.JSON',
          'Elixir.Postgrex.Extensions.JSONB',
          'Elixir.Postgrex.Extensions.Line',
          'Elixir.Postgrex.Extensions.LineSegment',
          'Elixir.Postgrex.Extensions.MACADDR',
          'Elixir.Postgrex.Extensions.Name',
          'Elixir.Postgrex.Extensions.Numeric',
          'Elixir.Postgrex.Extensions.OID','Elixir.Postgrex.Extensions.Path',
          'Elixir.Postgrex.Extensions.Point',
          'Elixir.Postgrex.Extensions.Polygon',
          'Elixir.Postgrex.Extensions.Range','Elixir.Postgrex.Extensions.Raw',
          'Elixir.Postgrex.Extensions.Record',
          'Elixir.Postgrex.Extensions.TID',
          'Elixir.Postgrex.Extensions.TSVector',
          'Elixir.Postgrex.Extensions.Time',
          'Elixir.Postgrex.Extensions.TimeTZ',
          'Elixir.Postgrex.Extensions.Timestamp',
          'Elixir.Postgrex.Extensions.TimestampTZ',
          'Elixir.Postgrex.Extensions.UUID',
          'Elixir.Postgrex.Extensions.VoidBinary',
          'Elixir.Postgrex.Extensions.VoidText','Elixir.Postgrex.INET',
          'Elixir.Postgrex.Interval','Elixir.Postgrex.Lexeme',
          'Elixir.Postgrex.Line','Elixir.Postgrex.LineSegment',
          'Elixir.Postgrex.MACADDR','Elixir.Postgrex.Messages',
          'Elixir.Postgrex.Notifications','Elixir.Postgrex.Parameters',
          'Elixir.Postgrex.Path','Elixir.Postgrex.Point',
          'Elixir.Postgrex.Polygon','Elixir.Postgrex.Protocol',
          'Elixir.Postgrex.Query','Elixir.Postgrex.Range',
          'Elixir.Postgrex.Result','Elixir.Postgrex.Stream',
          'Elixir.Postgrex.SuperExtension','Elixir.Postgrex.Time',
          'Elixir.Postgrex.Timestamp','Elixir.Postgrex.TypeInfo',
          'Elixir.Postgrex.TypeManager','Elixir.Postgrex.TypeModule',
          'Elixir.Postgrex.TypeServer','Elixir.Postgrex.TypeSupervisor',
          'Elixir.Postgrex.Types','Elixir.Postgrex.Utils',
          'Elixir.String.Chars.Postgrex.Copy',
          'Elixir.String.Chars.Postgrex.Query',
          'Elixir.String.Chars.Postgrex.Stream']},
     {path,["$ROOT/lib/fs-0.9.1/ebin"]},
     {primLoad,
         [fs,fs_app,fs_event_bridge,fs_server,fs_sup,fsevents,inotifywait,
          inotifywait_win32]},
     {path,["$ROOT/lib/eex-1.4.0/ebin"]},
     {primLoad,
         ['Elixir.EEx','Elixir.EEx.Compiler','Elixir.EEx.Engine',
          'Elixir.EEx.SmartEngine','Elixir.EEx.SyntaxError',
          'Elixir.EEx.Tokenizer']},
     {path,["$ROOT/lib/poison-3.1.0/ebin"]},
     {primLoad,
         ['Elixir.Poison','Elixir.Poison.Decode','Elixir.Poison.Decoder',
          'Elixir.Poison.Decoder.Any','Elixir.Poison.Encode',
          'Elixir.Poison.EncodeError','Elixir.Poison.Encoder',
          'Elixir.Poison.Encoder.Any','Elixir.Poison.Encoder.Atom',
          'Elixir.Poison.Encoder.BitString','Elixir.Poison.Encoder.Date',
          'Elixir.Poison.Encoder.DateTime','Elixir.Poison.Encoder.Float',
          'Elixir.Poison.Encoder.HashSet','Elixir.Poison.Encoder.Integer',
          'Elixir.Poison.Encoder.List','Elixir.Poison.Encoder.Map',
          'Elixir.Poison.Encoder.MapSet',
          'Elixir.Poison.Encoder.NaiveDateTime','Elixir.Poison.Encoder.Range',
          'Elixir.Poison.Encoder.Stream','Elixir.Poison.Encoder.Time',
          'Elixir.Poison.Parser','Elixir.Poison.Pretty',
          'Elixir.Poison.SyntaxError']},
     {path,["$ROOT/lib/phoenix-1.3.0-rc.1/ebin"]},
     {primLoad,
         ['Elixir.Mix.Phoenix','Elixir.Mix.Phoenix.Context',
          'Elixir.Mix.Phoenix.Schema','Elixir.Mix.Tasks.Compile.Phoenix',
          'Elixir.Mix.Tasks.Phoenix.Digest',
          'Elixir.Mix.Tasks.Phoenix.Gen.Channel',
          'Elixir.Mix.Tasks.Phoenix.Gen.Html',
          'Elixir.Mix.Tasks.Phoenix.Gen.Json',
          'Elixir.Mix.Tasks.Phoenix.Gen.Model',
          'Elixir.Mix.Tasks.Phoenix.Gen.Presence',
          'Elixir.Mix.Tasks.Phoenix.Gen.Secret',
          'Elixir.Mix.Tasks.Phoenix.Routes','Elixir.Mix.Tasks.Phoenix.Server',
          'Elixir.Mix.Tasks.Phx.Digest','Elixir.Mix.Tasks.Phx.Digest.Clean',
          'Elixir.Mix.Tasks.Phx.Gen.Channel',
          'Elixir.Mix.Tasks.Phx.Gen.Context','Elixir.Mix.Tasks.Phx.Gen.Html',
          'Elixir.Mix.Tasks.Phx.Gen.Json','Elixir.Mix.Tasks.Phx.Gen.Presence',
          'Elixir.Mix.Tasks.Phx.Gen.Schema','Elixir.Mix.Tasks.Phx.Gen.Secret',
          'Elixir.Mix.Tasks.Phx.Routes','Elixir.Mix.Tasks.Phx.Server',
          'Elixir.Phoenix','Elixir.Phoenix.ActionClauseError',
          'Elixir.Phoenix.Channel','Elixir.Phoenix.Channel.Server',
          'Elixir.Phoenix.ChannelTest',
          'Elixir.Phoenix.ChannelTest.NoopSerializer',
          'Elixir.Phoenix.CodeReloader','Elixir.Phoenix.CodeReloader.Proxy',
          'Elixir.Phoenix.CodeReloader.Server','Elixir.Phoenix.Config',
          'Elixir.Phoenix.ConnTest','Elixir.Phoenix.Controller',
          'Elixir.Phoenix.Controller.Pipeline','Elixir.Phoenix.Digester',
          'Elixir.Phoenix.Endpoint','Elixir.Phoenix.Endpoint.CowboyHandler',
          'Elixir.Phoenix.Endpoint.CowboyWebSocket',
          'Elixir.Phoenix.Endpoint.Handler',
          'Elixir.Phoenix.Endpoint.Instrument',
          'Elixir.Phoenix.Endpoint.RenderErrors',
          'Elixir.Phoenix.Endpoint.Supervisor',
          'Elixir.Phoenix.Endpoint.Watcher','Elixir.Phoenix.Logger',
          'Elixir.Phoenix.MissingParamError','Elixir.Phoenix.Naming',
          'Elixir.Phoenix.NotAcceptableError','Elixir.Phoenix.Param',
          'Elixir.Phoenix.Param.Any','Elixir.Phoenix.Param.Atom',
          'Elixir.Phoenix.Param.BitString','Elixir.Phoenix.Param.Integer',
          'Elixir.Phoenix.Param.Map','Elixir.Phoenix.Presence',
          'Elixir.Phoenix.Router','Elixir.Phoenix.Router.ConsoleFormatter',
          'Elixir.Phoenix.Router.Helpers',
          'Elixir.Phoenix.Router.NoRouteError',
          'Elixir.Phoenix.Router.Resource','Elixir.Phoenix.Router.Route',
          'Elixir.Phoenix.Router.Scope','Elixir.Phoenix.Socket',
          'Elixir.Phoenix.Socket.Broadcast',
          'Elixir.Phoenix.Socket.InvalidMessageError',
          'Elixir.Phoenix.Socket.Message','Elixir.Phoenix.Socket.Reply',
          'Elixir.Phoenix.Socket.Transport','Elixir.Phoenix.Template',
          'Elixir.Phoenix.Template.EExEngine',
          'Elixir.Phoenix.Template.Engine',
          'Elixir.Phoenix.Template.ExsEngine','Elixir.Phoenix.Template.HTML',
          'Elixir.Phoenix.Template.UndefinedError','Elixir.Phoenix.Token',
          'Elixir.Phoenix.Transports.LongPoll',
          'Elixir.Phoenix.Transports.LongPoll.Server',
          'Elixir.Phoenix.Transports.LongPoll.Supervisor',
          'Elixir.Phoenix.Transports.LongPollSerializer',
          'Elixir.Phoenix.Transports.Serializer',
          'Elixir.Phoenix.Transports.WebSocket',
          'Elixir.Phoenix.Transports.WebSocketSerializer',
          'Elixir.Phoenix.View']},
     {path,["$ROOT/lib/phoenix_live_reload-1.0.8/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.LiveReload.Channel','Elixir.Phoenix.LiveReloader',
          'Elixir.Phoenix.LiveReloader.Socket']},
     {path,["$ROOT/lib/phoenix_html-2.9.3/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.HTML','Elixir.Phoenix.HTML.Engine',
          'Elixir.Phoenix.HTML.Form','Elixir.Phoenix.HTML.FormData',
          'Elixir.Phoenix.HTML.FormData.Plug.Conn',
          'Elixir.Phoenix.HTML.Format','Elixir.Phoenix.HTML.Link',
          'Elixir.Phoenix.HTML.Safe','Elixir.Phoenix.HTML.Safe.Atom',
          'Elixir.Phoenix.HTML.Safe.BitString',
          'Elixir.Phoenix.HTML.Safe.Date','Elixir.Phoenix.HTML.Safe.DateTime',
          'Elixir.Phoenix.HTML.Safe.Float','Elixir.Phoenix.HTML.Safe.Integer',
          'Elixir.Phoenix.HTML.Safe.List',
          'Elixir.Phoenix.HTML.Safe.NaiveDateTime',
          'Elixir.Phoenix.HTML.Safe.Time','Elixir.Phoenix.HTML.Safe.Tuple',
          'Elixir.Phoenix.HTML.Tag']},
     {path,["$ROOT/lib/cowlib-1.0.2/ebin"]},
     {primLoad,
         [cow_cookie,cow_date,cow_http,cow_http_hd,cow_http_te,cow_mimetypes,
          cow_multipart,cow_qs,cow_spdy]},
     {path,["$ROOT/lib/asn1-4.0.4/ebin"]},
     {primLoad,[asn1rt,asn1rt_nif]},
     {path,["$ROOT/lib/public_key-1.3/ebin"]},
     {primLoad,
         ['OTP-PUB-KEY','PKCS-FRAME',pubkey_cert,pubkey_cert_records,
          pubkey_crl,pubkey_pbe,pubkey_pem,pubkey_ssh,public_key]},
     {path,["$ROOT/lib/ssl-8.1/ebin"]},
     {primLoad,
         [dtls,dtls_connection,dtls_connection_sup,dtls_handshake,dtls_record,
          dtls_socket,dtls_udp_listener,dtls_udp_sup,dtls_v1,inet6_tls_dist,
          inet_tls_dist,ssl,ssl_alert,ssl_app,ssl_certificate,ssl_cipher,
          ssl_config,ssl_connection,ssl_crl,ssl_crl_cache,ssl_crl_cache_api,
          ssl_crl_hash_dir,ssl_dist_sup,ssl_handshake,ssl_listen_tracker_sup,
          ssl_manager,ssl_pkix_db,ssl_record,ssl_session,ssl_session_cache,
          ssl_session_cache_api,ssl_srp_primes,ssl_sup,ssl_tls_dist_proxy,
          ssl_v2,ssl_v3,tls,tls_connection,tls_connection_sup,tls_handshake,
          tls_record,tls_socket,tls_v1]},
     {path,["$ROOT/lib/ranch-1.3.2/ebin"]},
     {primLoad,
         [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,ranch_conns_sup,
          ranch_listener_sup,ranch_protocol,ranch_server,ranch_ssl,ranch_sup,
          ranch_tcp,ranch_transport]},
     {path,["$ROOT/lib/cowboy-1.1.2/ebin"]},
     {primLoad,
         [cow_uri,cowboy,cowboy_app,cowboy_bstr,cowboy_clock,cowboy_handler,
          cowboy_http,cowboy_http_handler,cowboy_loop_handler,
          cowboy_middleware,cowboy_protocol,cowboy_req,cowboy_rest,
          cowboy_router,cowboy_spdy,cowboy_static,cowboy_sub_protocol,
          cowboy_sup,cowboy_websocket,cowboy_websocket_handler]},
     {path,["$ROOT/lib/syntax_tools-2.1.1/ebin"]},
     {primLoad,
         [epp_dodger,erl_comment_scan,erl_prettypr,erl_recomment,erl_syntax,
          erl_syntax_lib,erl_tidy,igor,merl,merl_transform,prettypr]},
     {path,["$ROOT/lib/xmerl-1.3.12/ebin"]},
     {primLoad,
         [xmerl,xmerl_b64Bin,xmerl_b64Bin_scan,xmerl_eventp,xmerl_html,
          xmerl_lib,xmerl_otpsgml,xmerl_regexp,xmerl_sax_old_dom,
          xmerl_sax_parser,xmerl_sax_parser_latin1,xmerl_sax_parser_list,
          xmerl_sax_parser_utf16be,xmerl_sax_parser_utf16le,
          xmerl_sax_parser_utf8,xmerl_sax_simple_dom,xmerl_scan,xmerl_sgml,
          xmerl_simple,xmerl_text,xmerl_ucs,xmerl_uri,xmerl_validate,
          xmerl_xlate,xmerl_xml,xmerl_xpath,xmerl_xpath_lib,xmerl_xpath_parse,
          xmerl_xpath_pred,xmerl_xpath_scan,xmerl_xs,xmerl_xsd,
          xmerl_xsd_type]},
     {path,["$ROOT/lib/inets-6.3.4/ebin"]},
     {primLoad,
         [ftp,ftp_progress,ftp_response,ftp_sup,http_chunk,http_request,
          http_response,http_transport,http_uri,http_util,httpc,httpc_cookie,
          httpc_handler,httpc_handler_sup,httpc_manager,httpc_profile_sup,
          httpc_request,httpc_response,httpc_sup,httpd,httpd_acceptor,
          httpd_acceptor_sup,httpd_cgi,httpd_conf,httpd_connection_sup,
          httpd_custom,httpd_custom_api,httpd_esi,httpd_example,httpd_file,
          httpd_instance_sup,httpd_log,httpd_manager,httpd_misc_sup,
          httpd_request,httpd_request_handler,httpd_response,httpd_script_env,
          httpd_socket,httpd_sup,httpd_util,inets,inets_app,inets_lib,
          inets_service,inets_sup,inets_trace,mod_actions,mod_alias,mod_auth,
          mod_auth_dets,mod_auth_mnesia,mod_auth_plain,mod_auth_server,
          mod_browser,mod_cgi,mod_dir,mod_disk_log,mod_esi,mod_get,mod_head,
          mod_htaccess,mod_log,mod_range,mod_responsecontrol,mod_security,
          mod_security_server,mod_trace,tftp,tftp_binary,tftp_engine,
          tftp_file,tftp_lib,tftp_logger,tftp_sup]},
     {path,["$ROOT/lib/mochiweb-2.12.2/ebin"]},
     {primLoad,
         [mochifmt,mochifmt_records,mochifmt_std,mochiglobal,mochihex,
          mochijson,mochijson2,mochilists,mochilogfile2,mochinum,mochitemp,
          mochiutf8,mochiweb,mochiweb_acceptor,mochiweb_base64url,
          mochiweb_charref,mochiweb_cookies,mochiweb_cover,mochiweb_echo,
          mochiweb_headers,mochiweb_html,mochiweb_http,mochiweb_io,
          mochiweb_mime,mochiweb_multipart,mochiweb_request,mochiweb_response,
          mochiweb_session,mochiweb_socket,mochiweb_socket_server,
          mochiweb_util,mochiweb_websocket,reloader]},
     {path,["$ROOT/lib/html_sanitize_ex-1.0.1/ebin"]},
     {primLoad,
         ['Elixir.HtmlSanitizeEx','Elixir.HtmlSanitizeEx.Parser',
          'Elixir.HtmlSanitizeEx.Scrubber',
          'Elixir.HtmlSanitizeEx.Scrubber.BasicHTML',
          'Elixir.HtmlSanitizeEx.Scrubber.CSS',
          'Elixir.HtmlSanitizeEx.Scrubber.HTML5',
          'Elixir.HtmlSanitizeEx.Scrubber.Meta',
          'Elixir.HtmlSanitizeEx.Scrubber.NoScrub',
          'Elixir.HtmlSanitizeEx.Scrubber.StripTags',
          'Elixir.HtmlSanitizeEx.Traverser']},
     {path,["$ROOT/lib/slugger-0.1.0/ebin"]},
     {primLoad,['Elixir.Slugger','Elixir.Slugify','Elixir.Slugify.Any']},
     {path,["$ROOT/lib/phoenix_pubsub-1.0.1/ebin"]},
     {primLoad,
         ['Elixir.Phoenix.PubSub','Elixir.Phoenix.PubSub.BroadcastError',
          'Elixir.Phoenix.PubSub.GC','Elixir.Phoenix.PubSub.Local',
          'Elixir.Phoenix.PubSub.LocalSupervisor','Elixir.Phoenix.PubSub.PG2',
          'Elixir.Phoenix.PubSub.PG2Server',
          'Elixir.Phoenix.PubSub.Supervisor','Elixir.Phoenix.Tracker',
          'Elixir.Phoenix.Tracker.Clock',
          'Elixir.Phoenix.Tracker.DeltaGeneration',
          'Elixir.Phoenix.Tracker.Replica','Elixir.Phoenix.Tracker.State']},
     {path,["$ROOT/lib/combine-0.9.6/ebin"]},
     {primLoad,
         ['Elixir.Combine','Elixir.Combine.Helpers',
          'Elixir.Combine.ParserState','Elixir.Combine.Parsers.Base',
          'Elixir.Combine.Parsers.Binary','Elixir.Combine.Parsers.Text']},
     {path,["$ROOT/lib/metrics-1.0.1/ebin"]},
     {primLoad,[metrics,metrics_dummy,metrics_exometer,metrics_folsom]},
     {path,["$ROOT/lib/ssl_verify_fun-1.1.1/ebin"]},
     {primLoad,
         [ssl_verify_fingerprint,ssl_verify_hostname,ssl_verify_pk,
          ssl_verify_util]},
     {path,["$ROOT/lib/certifi-1.1.0/ebin"]},
     {primLoad,[certifi,certifi_cacerts,certifi_weakcerts]},
     {path,["$ROOT/lib/mimerl-1.0.2/ebin"]},
     {primLoad,[mimerl]},
     {path,["$ROOT/lib/idna-4.0.0/ebin"]},
     {primLoad,[idna,idna_ucs,idna_unicode,idna_unicode_data,punycode]},
     {path,["$ROOT/lib/hackney-1.8.0/ebin"]},
     {primLoad,
         [hackney,hackney_app,hackney_bstr,hackney_connect,hackney_cookie,
          hackney_date,hackney_headers,hackney_headers_new,hackney_http,
          hackney_http_connect,hackney_local_tcp,hackney_manager,
          hackney_multipart,hackney_pool,hackney_pool_handler,hackney_request,
          hackney_response,hackney_socks5,hackney_ssl,hackney_stream,
          hackney_sup,hackney_tcp,hackney_trace,hackney_url,hackney_util]},
     {path,["$ROOT/lib/tzdata-0.5.12/ebin"]},
     {primLoad,
         ['Elixir.Tzdata','Elixir.Tzdata.App','Elixir.Tzdata.BasicDataMap',
          'Elixir.Tzdata.DataBuilder','Elixir.Tzdata.DataLoader',
          'Elixir.Tzdata.EtsHolder','Elixir.Tzdata.FarFutureDynamicPeriods',
          'Elixir.Tzdata.LeapSecParser','Elixir.Tzdata.Parser',
          'Elixir.Tzdata.ParserOrganizer','Elixir.Tzdata.PeriodBuilder',
          'Elixir.Tzdata.ReleaseReader','Elixir.Tzdata.ReleaseUpdater',
          'Elixir.Tzdata.TableData','Elixir.Tzdata.TableParser',
          'Elixir.Tzdata.Util']},
     {path,["$ROOT/lib/gettext-0.13.1/ebin"]},
     {primLoad,
         ['Elixir.Gettext','Elixir.Gettext.Application',
          'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
          'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
          'Elixir.Gettext.ExtractorAgent','Elixir.Gettext.Fuzzy',
          'Elixir.Gettext.Interpolation','Elixir.Gettext.Merger',
          'Elixir.Gettext.MissingBindingsError','Elixir.Gettext.PO',
          'Elixir.Gettext.PO.Parser','Elixir.Gettext.PO.PluralTranslation',
          'Elixir.Gettext.PO.SyntaxError','Elixir.Gettext.PO.Tokenizer',
          'Elixir.Gettext.PO.Translation','Elixir.Gettext.PO.Translations',
          'Elixir.Gettext.Plural','Elixir.Gettext.Plural.UnknownLocaleError',
          'Elixir.Mix.Tasks.Compile.Gettext',
          'Elixir.Mix.Tasks.Gettext.Extract','Elixir.Mix.Tasks.Gettext.Merge',
          gettext_po_parser]},
     {path,["$ROOT/lib/timex-3.1.13/ebin"]},
     {primLoad,
         ['Elixir.Enumerable.Timex.Interval','Elixir.Inspect.DateTime',
          'Elixir.Inspect.Timex.AmbiguousDateTime',
          'Elixir.Inspect.Timex.AmbiguousTimezoneInfo',
          'Elixir.Inspect.Timex.Duration','Elixir.Inspect.Timex.TimezoneInfo',
          'Elixir.Timex','Elixir.Timex.AmbiguousDateTime',
          'Elixir.Timex.AmbiguousTimezoneInfo','Elixir.Timex.Calendar.Julian',
          'Elixir.Timex.Comparable','Elixir.Timex.Comparable.Date',
          'Elixir.Timex.Comparable.DateTime','Elixir.Timex.Comparable.Diff',
          'Elixir.Timex.Comparable.NaiveDateTime',
          'Elixir.Timex.Comparable.Timex.AmbiguousDateTime',
          'Elixir.Timex.Comparable.Tuple','Elixir.Timex.Comparable.Utils',
          'Elixir.Timex.Constants','Elixir.Timex.Convert',
          'Elixir.Timex.DateTime.Helpers','Elixir.Timex.Duration',
          'Elixir.Timex.Format.DateTime.Formatter',
          'Elixir.Timex.Format.DateTime.Formatters.Default',
          'Elixir.Timex.Format.DateTime.Formatters.Relative',
          'Elixir.Timex.Format.DateTime.Formatters.Strftime',
          'Elixir.Timex.Format.Duration.Formatter',
          'Elixir.Timex.Format.Duration.Formatters.Default',
          'Elixir.Timex.Format.Duration.Formatters.Humanized',
          'Elixir.Timex.Format.FormatError','Elixir.Timex.Gettext',
          'Elixir.Timex.Helpers','Elixir.Timex.Interval',
          'Elixir.Timex.Interval.FormatError','Elixir.Timex.Macros',
          'Elixir.Timex.Parse.DateTime.Helpers',
          'Elixir.Timex.Parse.DateTime.Parser',
          'Elixir.Timex.Parse.DateTime.Parsers',
          'Elixir.Timex.Parse.DateTime.Parsers.ISO8601Extended',
          'Elixir.Timex.Parse.DateTime.Tokenizer',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Default',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Directive',
          'Elixir.Timex.Parse.DateTime.Tokenizers.Strftime',
          'Elixir.Timex.Parse.Duration.Parser',
          'Elixir.Timex.Parse.Duration.Parsers.ISO8601Parser',
          'Elixir.Timex.Parse.ParseError',
          'Elixir.Timex.Parse.Timezones.Posix',
          'Elixir.Timex.Parse.Timezones.Posix.PosixTimezone',
          'Elixir.Timex.Parse.ZoneInfo.Parser',
          'Elixir.Timex.Parse.ZoneInfo.Parser.Header',
          'Elixir.Timex.Parse.ZoneInfo.Parser.LeapSecond',
          'Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo',
          'Elixir.Timex.Parse.ZoneInfo.Parser.Zone','Elixir.Timex.Protocol',
          'Elixir.Timex.Protocol.Any','Elixir.Timex.Protocol.Date',
          'Elixir.Timex.Protocol.DateTime','Elixir.Timex.Protocol.Map',
          'Elixir.Timex.Protocol.NaiveDateTime','Elixir.Timex.Protocol.Tuple',
          'Elixir.Timex.Time','Elixir.Timex.Timezone',
          'Elixir.Timex.Timezone.Local','Elixir.Timex.Timezone.Utils',
          'Elixir.Timex.TimezoneInfo','Elixir.Timex.Translator',
          'Elixir.Timex.Types']},
     {path,["$ROOT/lib/runtime_tools-1.11/ebin"]},
     {primLoad,
         [appmon_info,dbg,dyntrace,erts_alloc_config,msacc,observer_backend,
          percept_profile,runtime_tools,runtime_tools_sup,system_information,
          ttb_autostart]},
     {path,["$ROOT/lib/quest-0.0.1/ebin"]},
     {primLoad,
         ['Elixir.Quest.Application','Elixir.Quest.Main',
          'Elixir.Quest.Main.Option','Elixir.Quest.Main.Question',
          'Elixir.Quest.Main.Questionnaire','Elixir.Quest.Main.Submission',
          'Elixir.Quest.PageHelper','Elixir.Quest.Repo','Elixir.Quest.Static',
          'Elixir.Quest.Static.Page','Elixir.Quest.Web',
          'Elixir.Quest.Web.Endpoint','Elixir.Quest.Web.ErrorHelpers',
          'Elixir.Quest.Web.ErrorView','Elixir.Quest.Web.Gettext',
          'Elixir.Quest.Web.LayoutView','Elixir.Quest.Web.OptionController',
          'Elixir.Quest.Web.OptionView','Elixir.Quest.Web.PageController',
          'Elixir.Quest.Web.PageView','Elixir.Quest.Web.QuestionController',
          'Elixir.Quest.Web.QuestionView',
          'Elixir.Quest.Web.QuestionnaireController',
          'Elixir.Quest.Web.QuestionnaireView','Elixir.Quest.Web.Router',
          'Elixir.Quest.Web.Router.Helpers',
          'Elixir.Quest.Web.SubmissionController',
          'Elixir.Quest.Web.SubmissionView','Elixir.Quest.Web.UserSocket',
          'Elixir.StringGenerator','Elixir.TypeCheck']},
     {path,["$ROOT/lib/iex-1.4.0/ebin"]},
     {primLoad,
         ['Elixir.IEx','Elixir.IEx.App','Elixir.IEx.Autocomplete',
          'Elixir.IEx.CLI','Elixir.IEx.Config','Elixir.IEx.Evaluator',
          'Elixir.IEx.Helpers','Elixir.IEx.History',
          'Elixir.IEx.History.State','Elixir.IEx.Info','Elixir.IEx.Info.Any',
          'Elixir.IEx.Info.Atom','Elixir.IEx.Info.BitString',
          'Elixir.IEx.Info.Float','Elixir.IEx.Info.Function',
          'Elixir.IEx.Info.Integer','Elixir.IEx.Info.List',
          'Elixir.IEx.Info.Map','Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
          'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Tuple',
          'Elixir.IEx.Introspection','Elixir.IEx.Remsh','Elixir.IEx.Server',
          'Elixir.IEx.State']},
     {path,["$ROOT/lib/sasl-3.0.2/ebin"]},
     {primLoad,
         [alarm_handler,erlsrv,format_lib_supp,misc_supp,rb,rb_format_supp,
          release_handler,release_handler_1,sasl,sasl_report,
          sasl_report_file_h,sasl_report_tty_h,si,si_sasl_supp,systools,
          systools_lib,systools_make,systools_rc,systools_relup]},
     {progress,modules_loaded},
     {path,
         ["$ROOT/lib/kernel-5.1.1/ebin","$ROOT/lib/stdlib-3.2/ebin",
          "$ROOT/lib/poolboy-1.5.1/ebin","$ROOT/lib/compiler-7.0.3/ebin",
          "$ROOT/lib/elixir-1.4.0/ebin","$ROOT/lib/decimal-1.3.1/ebin",
          "$ROOT/lib/logger-1.4.0/ebin","$ROOT/lib/ecto-2.1.4/ebin",
          "$ROOT/lib/mime-1.1.0/ebin","$ROOT/lib/crypto-3.7.2/ebin",
          "$ROOT/lib/plug-1.3.5/ebin","$ROOT/lib/phoenix_ecto-3.2.3/ebin",
          "$ROOT/lib/distillery-0.10.1/ebin",
          "$ROOT/lib/connection-1.0.4/ebin",
          "$ROOT/lib/db_connection-1.1.2/ebin",
          "$ROOT/lib/postgrex-0.13.2/ebin","$ROOT/lib/fs-0.9.1/ebin",
          "$ROOT/lib/eex-1.4.0/ebin","$ROOT/lib/poison-3.1.0/ebin",
          "$ROOT/lib/phoenix-1.3.0-rc.1/ebin",
          "$ROOT/lib/phoenix_live_reload-1.0.8/ebin",
          "$ROOT/lib/phoenix_html-2.9.3/ebin","$ROOT/lib/cowlib-1.0.2/ebin",
          "$ROOT/lib/asn1-4.0.4/ebin","$ROOT/lib/public_key-1.3/ebin",
          "$ROOT/lib/ssl-8.1/ebin","$ROOT/lib/ranch-1.3.2/ebin",
          "$ROOT/lib/cowboy-1.1.2/ebin","$ROOT/lib/syntax_tools-2.1.1/ebin",
          "$ROOT/lib/xmerl-1.3.12/ebin","$ROOT/lib/inets-6.3.4/ebin",
          "$ROOT/lib/mochiweb-2.12.2/ebin",
          "$ROOT/lib/html_sanitize_ex-1.0.1/ebin",
          "$ROOT/lib/slugger-0.1.0/ebin",
          "$ROOT/lib/phoenix_pubsub-1.0.1/ebin",
          "$ROOT/lib/combine-0.9.6/ebin","$ROOT/lib/metrics-1.0.1/ebin",
          "$ROOT/lib/ssl_verify_fun-1.1.1/ebin",
          "$ROOT/lib/certifi-1.1.0/ebin","$ROOT/lib/mimerl-1.0.2/ebin",
          "$ROOT/lib/idna-4.0.0/ebin","$ROOT/lib/hackney-1.8.0/ebin",
          "$ROOT/lib/tzdata-0.5.12/ebin","$ROOT/lib/gettext-0.13.1/ebin",
          "$ROOT/lib/timex-3.1.13/ebin","$ROOT/lib/runtime_tools-1.11/ebin",
          "$ROOT/lib/quest-0.0.1/ebin","$ROOT/lib/iex-1.4.0/ebin",
          "$ROOT/lib/sasl-3.0.2/ebin"]},
     {kernelProcess,heart,{heart,start,[]}},
     {kernelProcess,error_logger,{error_logger,start_link,[]}},
     {kernelProcess,application_controller,
         {application_controller,start,
             [{application,kernel,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"5.1.1"},
                   {id,[]},
                   {modules,
                       [application,application_controller,application_master,
                        application_starter,auth,code,code_server,dist_util,
                        erl_boot_server,erl_distribution,erl_reply,
                        error_handler,error_logger,file,file_server,
                        file_io_server,global,global_group,global_search,
                        group,heart,hipe_unified_loader,inet6_tcp,
                        inet6_tcp_dist,inet6_udp,inet6_sctp,inet_config,
                        inet_hosts,inet_gethost_native,inet_tcp_dist,kernel,
                        kernel_config,local_tcp,local_udp,net,net_adm,
                        net_kernel,os,ram_file,rpc,user,user_drv,user_sup,
                        disk_log,disk_log_1,disk_log_server,disk_log_sup,
                        dist_ac,erl_ddll,erl_epmd,erts_debug,gen_tcp,gen_udp,
                        gen_sctp,inet,inet_db,inet_dns,inet_parse,inet_res,
                        inet_tcp,inet_udp,inet_sctp,pg2,seq_trace,
                        standard_error,wrap_log_reader]},
                   {registered,
                       [application_controller,erl_reply,auth,boot_server,
                        code_server,disk_log_server,disk_log_sup,
                        erl_prim_loader,error_logger,file_server_2,
                        fixtable_server,global_group,global_name_server,heart,
                        init,kernel_config,kernel_sup,net_kernel,net_sup,rex,
                        user,os_server,ddll_server,erl_epmd,inet_db,pg2]},
                   {applications,[]},
                   {included_applications,[]},
                   {env,[{error_logger,tty}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{kernel,[]}}]}]}},
     {progress,init_kernel_started},
     {apply,
         {application,load,
             [{application,stdlib,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"3.2"},
                   {id,[]},
                   {modules,
                       [array,base64,beam_lib,binary,c,calendar,dets,
                        dets_server,dets_sup,dets_utils,dets_v8,dets_v9,dict,
                        digraph,digraph_utils,edlin,edlin_expand,epp,
                        eval_bits,erl_anno,erl_bits,erl_compile,erl_eval,
                        erl_expand_records,erl_internal,erl_lint,erl_parse,
                        erl_posix_msg,erl_pp,erl_scan,erl_tar,
                        error_logger_file_h,error_logger_tty_h,escript,ets,
                        file_sorter,filelib,filename,gb_trees,gb_sets,gen,
                        gen_event,gen_fsm,gen_server,gen_statem,io,io_lib,
                        io_lib_format,io_lib_fread,io_lib_pretty,lib,lists,
                        log_mf_h,maps,math,ms_transform,orddict,ordsets,
                        otp_internal,pool,proc_lib,proplists,qlc,qlc_pt,queue,
                        rand,random,re,sets,shell,shell_default,slave,sofs,
                        string,supervisor,supervisor_bridge,sys,timer,unicode,
                        win32reg,zip]},
                   {registered,
                       [timer_server,rsh_starter,take_over_monitor,
                        pool_master,dets]},
                   {applications,[kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,poolboy,
                  [{description,"A hunky Erlang worker pool factory"},
                   {vsn,"1.5.1"},
                   {id,[]},
                   {modules,[poolboy,poolboy_sup,poolboy_worker]},
                   {registered,[poolboy]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,compiler,
                  [{description,"ERTS  CXC 138 10"},
                   {vsn,"7.0.3"},
                   {id,[]},
                   {modules,
                       [beam_a,beam_asm,beam_block,beam_bool,beam_bs,beam_bsm,
                        beam_clean,beam_dead,beam_dict,beam_disasm,
                        beam_except,beam_flatten,beam_jump,beam_listing,
                        beam_opcodes,beam_peep,beam_receive,beam_reorder,
                        beam_split,beam_trim,beam_type,beam_utils,
                        beam_validator,beam_z,cerl,cerl_clauses,cerl_inline,
                        cerl_sets,cerl_trees,compile,core_scan,core_lint,
                        core_parse,core_pp,core_lib,erl_bifs,rec_env,
                        sys_core_dsetel,sys_core_fold,sys_core_fold_lists,
                        sys_core_inline,sys_pre_attributes,sys_pre_expand,
                        v3_codegen,v3_core,v3_kernel,v3_kernel_pp,v3_life]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,elixir,
                  [{description,"elixir"},
                   {vsn,"1.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Access','Elixir.Agent','Elixir.Agent.Server',
                        'Elixir.Application','Elixir.ArgumentError',
                        'Elixir.ArithmeticError','Elixir.Atom',
                        'Elixir.BadArityError','Elixir.BadBooleanError',
                        'Elixir.BadFunctionError','Elixir.BadMapError',
                        'Elixir.BadStructError','Elixir.Base',
                        'Elixir.Behaviour','Elixir.Bitwise','Elixir.Calendar',
                        'Elixir.Calendar.ISO','Elixir.CaseClauseError',
                        'Elixir.Code','Elixir.Code.LoadError',
                        'Elixir.Collectable','Elixir.Collectable.BitString',
                        'Elixir.Collectable.File.Stream',
                        'Elixir.Collectable.HashDict',
                        'Elixir.Collectable.HashSet',
                        'Elixir.Collectable.IO.Stream',
                        'Elixir.Collectable.List','Elixir.Collectable.Map',
                        'Elixir.Collectable.MapSet','Elixir.CompileError',
                        'Elixir.CondClauseError','Elixir.Date',
                        'Elixir.DateTime','Elixir.Dict','Elixir.Enum',
                        'Elixir.Enum.EmptyError',
                        'Elixir.Enum.OutOfBoundsError','Elixir.Enumerable',
                        'Elixir.Enumerable.File.Stream',
                        'Elixir.Enumerable.Function',
                        'Elixir.Enumerable.GenEvent.Stream',
                        'Elixir.Enumerable.HashDict',
                        'Elixir.Enumerable.HashSet',
                        'Elixir.Enumerable.IO.Stream',
                        'Elixir.Enumerable.List','Elixir.Enumerable.Map',
                        'Elixir.Enumerable.MapSet','Elixir.Enumerable.Range',
                        'Elixir.Enumerable.Stream','Elixir.ErlangError',
                        'Elixir.Exception','Elixir.File',
                        'Elixir.File.CopyError','Elixir.File.Error',
                        'Elixir.File.Stat','Elixir.File.Stream',
                        'Elixir.Float','Elixir.FunctionClauseError',
                        'Elixir.GenEvent','Elixir.GenEvent.Stream',
                        'Elixir.GenServer','Elixir.HashDict','Elixir.HashSet',
                        'Elixir.IO','Elixir.IO.ANSI','Elixir.IO.ANSI.Docs',
                        'Elixir.IO.ANSI.Sequence','Elixir.IO.Stream',
                        'Elixir.IO.StreamError','Elixir.Inspect',
                        'Elixir.Inspect.Algebra','Elixir.Inspect.Any',
                        'Elixir.Inspect.Atom','Elixir.Inspect.BitString',
                        'Elixir.Inspect.Date','Elixir.Inspect.Error',
                        'Elixir.Inspect.Float','Elixir.Inspect.Function',
                        'Elixir.Inspect.HashDict','Elixir.Inspect.HashSet',
                        'Elixir.Inspect.Integer','Elixir.Inspect.List',
                        'Elixir.Inspect.Map','Elixir.Inspect.MapSet',
                        'Elixir.Inspect.NaiveDateTime','Elixir.Inspect.Opts',
                        'Elixir.Inspect.PID','Elixir.Inspect.Port',
                        'Elixir.Inspect.Range','Elixir.Inspect.Reference',
                        'Elixir.Inspect.Regex','Elixir.Inspect.Stream',
                        'Elixir.Inspect.Time','Elixir.Inspect.Tuple',
                        'Elixir.Inspect.Version',
                        'Elixir.Inspect.Version.Requirement','Elixir.Integer',
                        'Elixir.Kernel','Elixir.Kernel.CLI',
                        'Elixir.Kernel.ErrorHandler',
                        'Elixir.Kernel.LexicalTracker',
                        'Elixir.Kernel.ParallelCompiler',
                        'Elixir.Kernel.ParallelRequire',
                        'Elixir.Kernel.SpecialForms','Elixir.Kernel.Typespec',
                        'Elixir.Kernel.Utils','Elixir.KeyError',
                        'Elixir.Keyword','Elixir.List','Elixir.List.Chars',
                        'Elixir.List.Chars.Atom',
                        'Elixir.List.Chars.BitString',
                        'Elixir.List.Chars.Float','Elixir.List.Chars.Integer',
                        'Elixir.List.Chars.List','Elixir.Macro',
                        'Elixir.Macro.Env','Elixir.Map','Elixir.MapSet',
                        'Elixir.MatchError','Elixir.Module',
                        'Elixir.Module.LocalsTracker','Elixir.NaiveDateTime',
                        'Elixir.Node','Elixir.OptionParser',
                        'Elixir.OptionParser.ParseError','Elixir.Path',
                        'Elixir.Path.Wildcard','Elixir.Port','Elixir.Process',
                        'Elixir.Protocol','Elixir.Protocol.UndefinedError',
                        'Elixir.Range','Elixir.Record',
                        'Elixir.Record.Extractor','Elixir.Regex',
                        'Elixir.Regex.CompileError','Elixir.Registry',
                        'Elixir.Registry.Partition',
                        'Elixir.Registry.Supervisor','Elixir.RuntimeError',
                        'Elixir.Set','Elixir.Stream','Elixir.Stream.Reducers',
                        'Elixir.String','Elixir.String.Break',
                        'Elixir.String.Casing','Elixir.String.Chars',
                        'Elixir.String.Chars.Atom',
                        'Elixir.String.Chars.BitString',
                        'Elixir.String.Chars.Date',
                        'Elixir.String.Chars.DateTime',
                        'Elixir.String.Chars.Float',
                        'Elixir.String.Chars.Integer',
                        'Elixir.String.Chars.List',
                        'Elixir.String.Chars.NaiveDateTime',
                        'Elixir.String.Chars.Time','Elixir.String.Chars.URI',
                        'Elixir.String.Chars.Version',
                        'Elixir.String.Chars.Version.Requirement',
                        'Elixir.String.Normalizer','Elixir.String.Unicode',
                        'Elixir.StringIO','Elixir.Supervisor',
                        'Elixir.Supervisor.Default','Elixir.Supervisor.Spec',
                        'Elixir.SyntaxError','Elixir.System',
                        'Elixir.SystemLimitError','Elixir.Task',
                        'Elixir.Task.Supervised','Elixir.Task.Supervisor',
                        'Elixir.Time','Elixir.TokenMissingError',
                        'Elixir.TryClauseError','Elixir.Tuple','Elixir.URI',
                        'Elixir.UndefinedFunctionError',
                        'Elixir.UnicodeConversionError','Elixir.Version',
                        'Elixir.Version.InvalidRequirementError',
                        'Elixir.Version.InvalidVersionError',
                        'Elixir.Version.Parser','Elixir.Version.Parser.DSL',
                        'Elixir.Version.Requirement','Elixir.WithClauseError',
                        elixir,elixir_aliases,elixir_bitstring,
                        elixir_bootstrap,elixir_clauses,elixir_code_server,
                        elixir_compiler,elixir_config,elixir_def,
                        elixir_def_defaults,elixir_def_overridable,
                        elixir_dispatch,elixir_env,elixir_errors,elixir_exp,
                        elixir_exp_clauses,elixir_fn,elixir_for,elixir_import,
                        elixir_interpolation,elixir_lexical,elixir_locals,
                        elixir_map,elixir_module,elixir_parser,elixir_quote,
                        elixir_rewrite,elixir_scope,elixir_sup,
                        elixir_tokenizer,elixir_translator,elixir_try,
                        elixir_utils,elixir_with]},
                   {registered,[elixir_config,elixir_code_server]},
                   {applications,[compiler,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{ansi_enabled,false}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{elixir,[]}}]}]}},
     {apply,
         {application,load,
             [{application,decimal,
                  [{description,
                       "Arbitrary precision decimal arithmetic for Elixir."},
                   {vsn,"1.3.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Decimal','Elixir.Decimal.Context',
                        'Elixir.Decimal.Error','Elixir.Inspect.Decimal',
                        'Elixir.String.Chars.Decimal']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,logger,
                  [{description,"logger"},
                   {vsn,"1.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Logger','Elixir.Logger.App',
                        'Elixir.Logger.Backends.Console',
                        'Elixir.Logger.Config','Elixir.Logger.ErrorHandler',
                        'Elixir.Logger.Formatter','Elixir.Logger.Translator',
                        'Elixir.Logger.Utils','Elixir.Logger.Watcher']},
                   {registered,
                       ['Elixir.Logger','Elixir.Logger.Supervisor',
                        'Elixir.Logger.Watcher']},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{level,debug},
                        {utc_log,false},
                        {truncate,8096},
                        {backends,[console]},
                        {translators,[{'Elixir.Logger.Translator',translate}]},
                        {sync_threshold,20},
                        {handle_otp_reports,true},
                        {handle_sasl_reports,false},
                        {compile_time_purge_level,debug},
                        {compile_time_application,nil},
                        {discard_threshold_for_error_logger,500},
                        {translator_inspect_opts,[]},
                        {console,[]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Logger.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,ecto,
                  [{description,
                       "A database wrapper and language integrated query for Elixir.\n"},
                   {vsn,"2.1.4"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Ecto.Adapters.SQL.Stream',
                        'Elixir.Ecto','Elixir.Ecto.Adapter',
                        'Elixir.Ecto.Adapter.Migration',
                        'Elixir.Ecto.Adapter.Storage',
                        'Elixir.Ecto.Adapter.Structure',
                        'Elixir.Ecto.Adapter.Transaction',
                        'Elixir.Ecto.Adapters.MySQL',
                        'Elixir.Ecto.Adapters.Postgres',
                        'Elixir.Ecto.Adapters.Postgres.Connection',
                        'Elixir.Ecto.Adapters.Postgres.Date',
                        'Elixir.Ecto.Adapters.Postgres.Time',
                        'Elixir.Ecto.Adapters.Postgres.Timestamp',
                        'Elixir.Ecto.Adapters.Postgres.TimestampTZ',
                        'Elixir.Ecto.Adapters.Postgres.TypeModule',
                        'Elixir.Ecto.Adapters.SQL',
                        'Elixir.Ecto.Adapters.SQL.Connection',
                        'Elixir.Ecto.Adapters.SQL.Sandbox',
                        'Elixir.Ecto.Adapters.SQL.Sandbox.Connection',
                        'Elixir.Ecto.Adapters.SQL.Sandbox.Pool',
                        'Elixir.Ecto.Adapters.SQL.Stream',
                        'Elixir.Ecto.Application','Elixir.Ecto.Association',
                        'Elixir.Ecto.Association.BelongsTo',
                        'Elixir.Ecto.Association.Has',
                        'Elixir.Ecto.Association.HasThrough',
                        'Elixir.Ecto.Association.ManyToMany',
                        'Elixir.Ecto.Association.NotLoaded',
                        'Elixir.Ecto.CastError','Elixir.Ecto.ChangeError',
                        'Elixir.Ecto.Changeset',
                        'Elixir.Ecto.Changeset.Relation',
                        'Elixir.Ecto.ConstraintError','Elixir.Ecto.DataType',
                        'Elixir.Ecto.DataType.Any',
                        'Elixir.Ecto.DataType.Date',
                        'Elixir.Ecto.DataType.DateTime',
                        'Elixir.Ecto.DataType.Ecto.Date',
                        'Elixir.Ecto.DataType.Ecto.DateTime',
                        'Elixir.Ecto.DataType.Ecto.Time',
                        'Elixir.Ecto.DataType.List',
                        'Elixir.Ecto.DataType.NaiveDateTime',
                        'Elixir.Ecto.DataType.Time','Elixir.Ecto.Date',
                        'Elixir.Ecto.DateTime','Elixir.Ecto.DateTime.Utils',
                        'Elixir.Ecto.Embedded',
                        'Elixir.Ecto.InvalidChangesetError',
                        'Elixir.Ecto.InvalidURLError','Elixir.Ecto.LogEntry',
                        'Elixir.Ecto.Migration',
                        'Elixir.Ecto.Migration.Constraint',
                        'Elixir.Ecto.Migration.Index',
                        'Elixir.Ecto.Migration.Reference',
                        'Elixir.Ecto.Migration.Runner',
                        'Elixir.Ecto.Migration.SchemaMigration',
                        'Elixir.Ecto.Migration.Supervisor',
                        'Elixir.Ecto.Migration.Table',
                        'Elixir.Ecto.MigrationError','Elixir.Ecto.Migrator',
                        'Elixir.Ecto.Multi',
                        'Elixir.Ecto.MultipleResultsError',
                        'Elixir.Ecto.NoPrimaryKeyFieldError',
                        'Elixir.Ecto.NoPrimaryKeyValueError',
                        'Elixir.Ecto.NoResultsError','Elixir.Ecto.Query',
                        'Elixir.Ecto.Query.API',
                        'Elixir.Ecto.Query.BooleanExpr',
                        'Elixir.Ecto.Query.Builder',
                        'Elixir.Ecto.Query.Builder.Distinct',
                        'Elixir.Ecto.Query.Builder.Dynamic',
                        'Elixir.Ecto.Query.Builder.Filter',
                        'Elixir.Ecto.Query.Builder.From',
                        'Elixir.Ecto.Query.Builder.GroupBy',
                        'Elixir.Ecto.Query.Builder.Join',
                        'Elixir.Ecto.Query.Builder.LimitOffset',
                        'Elixir.Ecto.Query.Builder.Lock',
                        'Elixir.Ecto.Query.Builder.OrderBy',
                        'Elixir.Ecto.Query.Builder.Preload',
                        'Elixir.Ecto.Query.Builder.Select',
                        'Elixir.Ecto.Query.Builder.Update',
                        'Elixir.Ecto.Query.CastError',
                        'Elixir.Ecto.Query.CompileError',
                        'Elixir.Ecto.Query.DynamicExpr',
                        'Elixir.Ecto.Query.JoinExpr',
                        'Elixir.Ecto.Query.Planner',
                        'Elixir.Ecto.Query.QueryExpr',
                        'Elixir.Ecto.Query.SelectExpr',
                        'Elixir.Ecto.Query.Tagged','Elixir.Ecto.QueryError',
                        'Elixir.Ecto.Queryable','Elixir.Ecto.Queryable.Atom',
                        'Elixir.Ecto.Queryable.BitString',
                        'Elixir.Ecto.Queryable.Ecto.Query',
                        'Elixir.Ecto.Queryable.Ecto.SubQuery',
                        'Elixir.Ecto.Queryable.Tuple','Elixir.Ecto.Repo',
                        'Elixir.Ecto.Repo.Assoc','Elixir.Ecto.Repo.Preloader',
                        'Elixir.Ecto.Repo.Queryable',
                        'Elixir.Ecto.Repo.Schema',
                        'Elixir.Ecto.Repo.Supervisor','Elixir.Ecto.Schema',
                        'Elixir.Ecto.Schema.Metadata',
                        'Elixir.Ecto.StaleEntryError','Elixir.Ecto.SubQuery',
                        'Elixir.Ecto.SubQueryError','Elixir.Ecto.Time',
                        'Elixir.Ecto.Type','Elixir.Ecto.UUID',
                        'Elixir.Enumerable.Ecto.Adapters.SQL.Stream',
                        'Elixir.Inspect.Ecto.Association.NotLoaded',
                        'Elixir.Inspect.Ecto.Changeset',
                        'Elixir.Inspect.Ecto.Date',
                        'Elixir.Inspect.Ecto.DateTime',
                        'Elixir.Inspect.Ecto.Query',
                        'Elixir.Inspect.Ecto.Query.DynamicExpr',
                        'Elixir.Inspect.Ecto.Schema.Metadata',
                        'Elixir.Inspect.Ecto.Time','Elixir.Mix.Ecto',
                        'Elixir.Mix.Tasks.Ecto',
                        'Elixir.Mix.Tasks.Ecto.Create',
                        'Elixir.Mix.Tasks.Ecto.Drop',
                        'Elixir.Mix.Tasks.Ecto.Dump',
                        'Elixir.Mix.Tasks.Ecto.Gen.Migration',
                        'Elixir.Mix.Tasks.Ecto.Gen.Repo',
                        'Elixir.Mix.Tasks.Ecto.Load',
                        'Elixir.Mix.Tasks.Ecto.Migrate',
                        'Elixir.Mix.Tasks.Ecto.Migrations',
                        'Elixir.Mix.Tasks.Ecto.Rollback',
                        'Elixir.Poison.Encoder.Decimal',
                        'Elixir.Poison.Encoder.Ecto.Association.NotLoaded',
                        'Elixir.Poison.Encoder.Ecto.Date',
                        'Elixir.Poison.Encoder.Ecto.DateTime',
                        'Elixir.Poison.Encoder.Ecto.Time',
                        'Elixir.String.Chars.Ecto.Date',
                        'Elixir.String.Chars.Ecto.DateTime',
                        'Elixir.String.Chars.Ecto.Time']},
                   {registered,[]},
                   {applications,
                       [poolboy,decimal,logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{json_library,'Elixir.Poison'},
                        {postgres_map_type,<<"jsonb">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Ecto.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,mime,
                  [{description,"A MIME type module for Elixir"},
                   {vsn,"1.1.0"},
                   {id,[]},
                   {modules,['Elixir.MIME']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,crypto,
                  [{description,"CRYPTO"},
                   {vsn,"3.7.2"},
                   {id,[]},
                   {modules,[crypto,crypto_ec_curves]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,plug,
                  [{description,
                       "A specification and conveniences for composable modules between web applications"},
                   {vsn,"1.3.5"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Plug.Conn',
                        'Elixir.Inspect.Plug.Conn','Elixir.Plug',
                        'Elixir.Plug.Adapters.Cowboy',
                        'Elixir.Plug.Adapters.Cowboy.Conn',
                        'Elixir.Plug.Adapters.Cowboy.Handler',
                        'Elixir.Plug.Adapters.Test.Conn',
                        'Elixir.Plug.Adapters.Translator',
                        'Elixir.Plug.BadRequestError','Elixir.Plug.Builder',
                        'Elixir.Plug.CSRFProtection',
                        'Elixir.Plug.CSRFProtection.InvalidCSRFTokenError',
                        'Elixir.Plug.CSRFProtection.InvalidCrossOriginRequestError',
                        'Elixir.Plug.Conn','Elixir.Plug.Conn.Adapter',
                        'Elixir.Plug.Conn.AlreadySentError',
                        'Elixir.Plug.Conn.CookieOverflowError',
                        'Elixir.Plug.Conn.Cookies',
                        'Elixir.Plug.Conn.InvalidHeaderError',
                        'Elixir.Plug.Conn.InvalidQueryError',
                        'Elixir.Plug.Conn.NotSentError',
                        'Elixir.Plug.Conn.Query','Elixir.Plug.Conn.Status',
                        'Elixir.Plug.Conn.Unfetched','Elixir.Plug.Conn.Utils',
                        'Elixir.Plug.Conn.WrapperError','Elixir.Plug.Crypto',
                        'Elixir.Plug.Crypto.KeyGenerator',
                        'Elixir.Plug.Crypto.MessageEncryptor',
                        'Elixir.Plug.Crypto.MessageVerifier',
                        'Elixir.Plug.Debugger','Elixir.Plug.ErrorHandler',
                        'Elixir.Plug.Exception','Elixir.Plug.Exception.Any',
                        'Elixir.Plug.HTML','Elixir.Plug.Head',
                        'Elixir.Plug.Logger','Elixir.Plug.MIME',
                        'Elixir.Plug.MethodOverride','Elixir.Plug.Parsers',
                        'Elixir.Plug.Parsers.BadEncodingError',
                        'Elixir.Plug.Parsers.JSON',
                        'Elixir.Plug.Parsers.MULTIPART',
                        'Elixir.Plug.Parsers.ParseError',
                        'Elixir.Plug.Parsers.RequestTooLargeError',
                        'Elixir.Plug.Parsers.URLENCODED',
                        'Elixir.Plug.Parsers.UnsupportedMediaTypeError',
                        'Elixir.Plug.RequestId','Elixir.Plug.Router',
                        'Elixir.Plug.Router.InvalidSpecError',
                        'Elixir.Plug.Router.Utils','Elixir.Plug.SSL',
                        'Elixir.Plug.Session','Elixir.Plug.Session.COOKIE',
                        'Elixir.Plug.Session.ETS','Elixir.Plug.Session.Store',
                        'Elixir.Plug.Static',
                        'Elixir.Plug.Static.InvalidPathError',
                        'Elixir.Plug.Supervisor','Elixir.Plug.Test',
                        'Elixir.Plug.TimeoutError','Elixir.Plug.Upload',
                        'Elixir.Plug.UploadError']},
                   {registered,[]},
                   {applications,[mime,crypto,logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Plug',[]}}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_ecto,
                  [{description,"Integration between Phoenix & Ecto"},
                   {vsn,"3.2.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.Ecto',
                        'Elixir.Phoenix.Ecto.SQL.Sandbox',
                        'Elixir.Phoenix.HTML.FormData.Ecto.Changeset',
                        'Elixir.Phoenix.HTML.Safe.Decimal',
                        'Elixir.Phoenix.HTML.Safe.Ecto.Date',
                        'Elixir.Phoenix.HTML.Safe.Ecto.DateTime',
                        'Elixir.Phoenix.HTML.Safe.Ecto.Time',
                        'Elixir.Plug.Exception.Ecto.CastError',
                        'Elixir.Plug.Exception.Ecto.InvalidChangesetError',
                        'Elixir.Plug.Exception.Ecto.NoResultsError',
                        'Elixir.Plug.Exception.Ecto.Query.CastError']},
                   {registered,[]},
                   {applications,[ecto,plug,logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,distillery,
                  [{description,
                       "Build releases of your Mix projects with ease!\nWARNING: This package is an experimental replacement for exrm, use at your own risk!\n"},
                   {vsn,"0.10.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Distillery.IO','Elixir.Mix.Releases.App',
                        'Elixir.Mix.Releases.Appup',
                        'Elixir.Mix.Releases.Archiver',
                        'Elixir.Mix.Releases.Assembler',
                        'Elixir.Mix.Releases.Config',
                        'Elixir.Mix.Releases.Config.LoadError',
                        'Elixir.Mix.Releases.Environment',
                        'Elixir.Mix.Releases.Logger',
                        'Elixir.Mix.Releases.Overlays',
                        'Elixir.Mix.Releases.Plugin',
                        'Elixir.Mix.Releases.Profile',
                        'Elixir.Mix.Releases.Release',
                        'Elixir.Mix.Releases.Utils',
                        'Elixir.Mix.Tasks.Release',
                        'Elixir.Mix.Tasks.Release.Clean',
                        'Elixir.Mix.Tasks.Release.Init']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,connection,
                  [{description,
                       "Connection behaviour for connection processes\n"},
                   {vsn,"1.0.4"},
                   {id,[]},
                   {modules,['Elixir.Connection']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,db_connection,
                  [{description,
                       "Database connection behaviour for database transactions and connection pooling\n"},
                   {vsn,"1.1.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.DBConnection','Elixir.DBConnection.App',
                        'Elixir.DBConnection.Backoff',
                        'Elixir.DBConnection.Connection',
                        'Elixir.DBConnection.ConnectionError',
                        'Elixir.DBConnection.LogEntry',
                        'Elixir.DBConnection.Ownership',
                        'Elixir.DBConnection.Ownership.Manager',
                        'Elixir.DBConnection.Ownership.Pool',
                        'Elixir.DBConnection.Ownership.PoolSupervisor',
                        'Elixir.DBConnection.Ownership.Proxy',
                        'Elixir.DBConnection.Ownership.ProxySupervisor',
                        'Elixir.DBConnection.OwnershipError',
                        'Elixir.DBConnection.Pool',
                        'Elixir.DBConnection.Poolboy',
                        'Elixir.DBConnection.Poolboy.Worker',
                        'Elixir.DBConnection.PrepareStream',
                        'Elixir.DBConnection.Query',
                        'Elixir.DBConnection.Sojourn',
                        'Elixir.DBConnection.Sojourn.Broker',
                        'Elixir.DBConnection.Sojourn.Pool',
                        'Elixir.DBConnection.Sojourn.Regulator',
                        'Elixir.DBConnection.Sojourn.Starter',
                        'Elixir.DBConnection.Sojourn.Supervisor',
                        'Elixir.DBConnection.SojournError',
                        'Elixir.DBConnection.Stream',
                        'Elixir.DBConnection.Task',
                        'Elixir.DBConnection.Watcher',
                        'Elixir.Enumerable.DBConnection.PrepareStream',
                        'Elixir.Enumerable.DBConnection.Stream']},
                   {registered,[]},
                   {applications,[connection,logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.DBConnection.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,postgrex,
                  [{description,"PostgreSQL driver for Elixir."},
                   {vsn,"0.13.2"},
                   {id,[]},
                   {modules,
                       ['Elixir.Collectable.Postgrex.Stream',
                        'Elixir.DBConnection.Query.Postgrex.Copy',
                        'Elixir.DBConnection.Query.Postgrex.Parameters',
                        'Elixir.DBConnection.Query.Postgrex.Query',
                        'Elixir.DBConnection.Query.Postgrex.Stream',
                        'Elixir.Enumerable.Postgrex.Stream','Elixir.Postgrex',
                        'Elixir.Postgrex.App',
                        'Elixir.Postgrex.BinaryExtension',
                        'Elixir.Postgrex.BinaryUtils','Elixir.Postgrex.Box',
                        'Elixir.Postgrex.CIDR','Elixir.Postgrex.Circle',
                        'Elixir.Postgrex.Copy','Elixir.Postgrex.CopyData',
                        'Elixir.Postgrex.CopyDone','Elixir.Postgrex.Cursor',
                        'Elixir.Postgrex.Date','Elixir.Postgrex.DefaultTypes',
                        'Elixir.Postgrex.Error','Elixir.Postgrex.ErrorCode',
                        'Elixir.Postgrex.Extension',
                        'Elixir.Postgrex.Extensions.Array',
                        'Elixir.Postgrex.Extensions.BitString',
                        'Elixir.Postgrex.Extensions.Bool',
                        'Elixir.Postgrex.Extensions.Box',
                        'Elixir.Postgrex.Extensions.CIDR',
                        'Elixir.Postgrex.Extensions.Circle',
                        'Elixir.Postgrex.Extensions.Date',
                        'Elixir.Postgrex.Extensions.Float4',
                        'Elixir.Postgrex.Extensions.Float8',
                        'Elixir.Postgrex.Extensions.HStore',
                        'Elixir.Postgrex.Extensions.INET',
                        'Elixir.Postgrex.Extensions.Int2',
                        'Elixir.Postgrex.Extensions.Int4',
                        'Elixir.Postgrex.Extensions.Int8',
                        'Elixir.Postgrex.Extensions.Interval',
                        'Elixir.Postgrex.Extensions.JSON',
                        'Elixir.Postgrex.Extensions.JSONB',
                        'Elixir.Postgrex.Extensions.Line',
                        'Elixir.Postgrex.Extensions.LineSegment',
                        'Elixir.Postgrex.Extensions.MACADDR',
                        'Elixir.Postgrex.Extensions.Name',
                        'Elixir.Postgrex.Extensions.Numeric',
                        'Elixir.Postgrex.Extensions.OID',
                        'Elixir.Postgrex.Extensions.Path',
                        'Elixir.Postgrex.Extensions.Point',
                        'Elixir.Postgrex.Extensions.Polygon',
                        'Elixir.Postgrex.Extensions.Range',
                        'Elixir.Postgrex.Extensions.Raw',
                        'Elixir.Postgrex.Extensions.Record',
                        'Elixir.Postgrex.Extensions.TID',
                        'Elixir.Postgrex.Extensions.TSVector',
                        'Elixir.Postgrex.Extensions.Time',
                        'Elixir.Postgrex.Extensions.TimeTZ',
                        'Elixir.Postgrex.Extensions.Timestamp',
                        'Elixir.Postgrex.Extensions.TimestampTZ',
                        'Elixir.Postgrex.Extensions.UUID',
                        'Elixir.Postgrex.Extensions.VoidBinary',
                        'Elixir.Postgrex.Extensions.VoidText',
                        'Elixir.Postgrex.INET','Elixir.Postgrex.Interval',
                        'Elixir.Postgrex.Lexeme','Elixir.Postgrex.Line',
                        'Elixir.Postgrex.LineSegment',
                        'Elixir.Postgrex.MACADDR','Elixir.Postgrex.Messages',
                        'Elixir.Postgrex.Notifications',
                        'Elixir.Postgrex.Parameters','Elixir.Postgrex.Path',
                        'Elixir.Postgrex.Point','Elixir.Postgrex.Polygon',
                        'Elixir.Postgrex.Protocol','Elixir.Postgrex.Query',
                        'Elixir.Postgrex.Range','Elixir.Postgrex.Result',
                        'Elixir.Postgrex.Stream',
                        'Elixir.Postgrex.SuperExtension',
                        'Elixir.Postgrex.Time','Elixir.Postgrex.Timestamp',
                        'Elixir.Postgrex.TypeInfo',
                        'Elixir.Postgrex.TypeManager',
                        'Elixir.Postgrex.TypeModule',
                        'Elixir.Postgrex.TypeServer',
                        'Elixir.Postgrex.TypeSupervisor',
                        'Elixir.Postgrex.Types','Elixir.Postgrex.Utils',
                        'Elixir.String.Chars.Postgrex.Copy',
                        'Elixir.String.Chars.Postgrex.Query',
                        'Elixir.String.Chars.Postgrex.Stream']},
                   {registered,[]},
                   {applications,
                       [decimal,db_connection,crypto,logger,elixir,stdlib,
                        kernel]},
                   {included_applications,[]},
                   {env,[{type_server_reap_after,180000}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Postgrex.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,fs,
                  [{description,"VXZ FS Listener"},
                   {vsn,"0.9.1"},
                   {id,[]},
                   {modules,
                       [fs,fs_app,fs_event_bridge,fs_server,fs_sup,fsevents,
                        inotifywait,inotifywait_win32]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{fs_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,eex,
                  [{description,"eex"},
                   {vsn,"1.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.EEx','Elixir.EEx.Compiler',
                        'Elixir.EEx.Engine','Elixir.EEx.SmartEngine',
                        'Elixir.EEx.SyntaxError','Elixir.EEx.Tokenizer']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,poison,
                  [{description,
                       "An incredibly fast, pure Elixir JSON library"},
                   {vsn,"3.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Poison','Elixir.Poison.Decode',
                        'Elixir.Poison.Decoder','Elixir.Poison.Decoder.Any',
                        'Elixir.Poison.Encode','Elixir.Poison.EncodeError',
                        'Elixir.Poison.Encoder','Elixir.Poison.Encoder.Any',
                        'Elixir.Poison.Encoder.Atom',
                        'Elixir.Poison.Encoder.BitString',
                        'Elixir.Poison.Encoder.Date',
                        'Elixir.Poison.Encoder.DateTime',
                        'Elixir.Poison.Encoder.Float',
                        'Elixir.Poison.Encoder.HashSet',
                        'Elixir.Poison.Encoder.Integer',
                        'Elixir.Poison.Encoder.List',
                        'Elixir.Poison.Encoder.Map',
                        'Elixir.Poison.Encoder.MapSet',
                        'Elixir.Poison.Encoder.NaiveDateTime',
                        'Elixir.Poison.Encoder.Range',
                        'Elixir.Poison.Encoder.Stream',
                        'Elixir.Poison.Encoder.Time','Elixir.Poison.Parser',
                        'Elixir.Poison.Pretty','Elixir.Poison.SyntaxError']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix,
                  [{description,
                       "Productive. Reliable. Fast. A productive web framework that\ndoes not compromise speed and maintainability.\n"},
                   {vsn,"1.3.0-rc.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Mix.Phoenix','Elixir.Mix.Phoenix.Context',
                        'Elixir.Mix.Phoenix.Schema',
                        'Elixir.Mix.Tasks.Compile.Phoenix',
                        'Elixir.Mix.Tasks.Phoenix.Digest',
                        'Elixir.Mix.Tasks.Phoenix.Gen.Channel',
                        'Elixir.Mix.Tasks.Phoenix.Gen.Html',
                        'Elixir.Mix.Tasks.Phoenix.Gen.Json',
                        'Elixir.Mix.Tasks.Phoenix.Gen.Model',
                        'Elixir.Mix.Tasks.Phoenix.Gen.Presence',
                        'Elixir.Mix.Tasks.Phoenix.Gen.Secret',
                        'Elixir.Mix.Tasks.Phoenix.Routes',
                        'Elixir.Mix.Tasks.Phoenix.Server',
                        'Elixir.Mix.Tasks.Phx.Digest',
                        'Elixir.Mix.Tasks.Phx.Digest.Clean',
                        'Elixir.Mix.Tasks.Phx.Gen.Channel',
                        'Elixir.Mix.Tasks.Phx.Gen.Context',
                        'Elixir.Mix.Tasks.Phx.Gen.Html',
                        'Elixir.Mix.Tasks.Phx.Gen.Json',
                        'Elixir.Mix.Tasks.Phx.Gen.Presence',
                        'Elixir.Mix.Tasks.Phx.Gen.Schema',
                        'Elixir.Mix.Tasks.Phx.Gen.Secret',
                        'Elixir.Mix.Tasks.Phx.Routes',
                        'Elixir.Mix.Tasks.Phx.Server','Elixir.Phoenix',
                        'Elixir.Phoenix.ActionClauseError',
                        'Elixir.Phoenix.Channel',
                        'Elixir.Phoenix.Channel.Server',
                        'Elixir.Phoenix.ChannelTest',
                        'Elixir.Phoenix.ChannelTest.NoopSerializer',
                        'Elixir.Phoenix.CodeReloader',
                        'Elixir.Phoenix.CodeReloader.Proxy',
                        'Elixir.Phoenix.CodeReloader.Server',
                        'Elixir.Phoenix.Config','Elixir.Phoenix.ConnTest',
                        'Elixir.Phoenix.Controller',
                        'Elixir.Phoenix.Controller.Pipeline',
                        'Elixir.Phoenix.Digester','Elixir.Phoenix.Endpoint',
                        'Elixir.Phoenix.Endpoint.CowboyHandler',
                        'Elixir.Phoenix.Endpoint.CowboyWebSocket',
                        'Elixir.Phoenix.Endpoint.Handler',
                        'Elixir.Phoenix.Endpoint.Instrument',
                        'Elixir.Phoenix.Endpoint.RenderErrors',
                        'Elixir.Phoenix.Endpoint.Supervisor',
                        'Elixir.Phoenix.Endpoint.Watcher',
                        'Elixir.Phoenix.Logger',
                        'Elixir.Phoenix.MissingParamError',
                        'Elixir.Phoenix.Naming',
                        'Elixir.Phoenix.NotAcceptableError',
                        'Elixir.Phoenix.Param','Elixir.Phoenix.Param.Any',
                        'Elixir.Phoenix.Param.Atom',
                        'Elixir.Phoenix.Param.BitString',
                        'Elixir.Phoenix.Param.Integer',
                        'Elixir.Phoenix.Param.Map','Elixir.Phoenix.Presence',
                        'Elixir.Phoenix.Router',
                        'Elixir.Phoenix.Router.ConsoleFormatter',
                        'Elixir.Phoenix.Router.Helpers',
                        'Elixir.Phoenix.Router.NoRouteError',
                        'Elixir.Phoenix.Router.Resource',
                        'Elixir.Phoenix.Router.Route',
                        'Elixir.Phoenix.Router.Scope','Elixir.Phoenix.Socket',
                        'Elixir.Phoenix.Socket.Broadcast',
                        'Elixir.Phoenix.Socket.InvalidMessageError',
                        'Elixir.Phoenix.Socket.Message',
                        'Elixir.Phoenix.Socket.Reply',
                        'Elixir.Phoenix.Socket.Transport',
                        'Elixir.Phoenix.Template',
                        'Elixir.Phoenix.Template.EExEngine',
                        'Elixir.Phoenix.Template.Engine',
                        'Elixir.Phoenix.Template.ExsEngine',
                        'Elixir.Phoenix.Template.HTML',
                        'Elixir.Phoenix.Template.UndefinedError',
                        'Elixir.Phoenix.Token',
                        'Elixir.Phoenix.Transports.LongPoll',
                        'Elixir.Phoenix.Transports.LongPoll.Server',
                        'Elixir.Phoenix.Transports.LongPoll.Supervisor',
                        'Elixir.Phoenix.Transports.LongPollSerializer',
                        'Elixir.Phoenix.Transports.Serializer',
                        'Elixir.Phoenix.Transports.WebSocket',
                        'Elixir.Phoenix.Transports.WebSocketSerializer',
                        'Elixir.Phoenix.View']},
                   {registered,[]},
                   {applications,
                       [eex,poison,plug,logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{stacktrace_depth,nil},
                        {template_engines,[]},
                        {format_encoders,[]},
                        {filter_parameters,[<<"password">>]},
                        {serve_endpoints,false},
                        {gzippable_exts,
                            [<<".js">>,<<".css">>,<<".txt">>,<<".text">>,
                             <<".html">>,<<".json">>,<<".svg">>]}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix',[]}}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_live_reload,
                  [{description,
                       "Provides live-reload functionality for Phoenix"},
                   {vsn,"1.0.8"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.LiveReload.Channel',
                        'Elixir.Phoenix.LiveReloader',
                        'Elixir.Phoenix.LiveReloader.Socket']},
                   {registered,[]},
                   {applications,[fs,phoenix,logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_html,
                  [{description,
                       "Phoenix.HTML functions for working with HTML strings and templates"},
                   {vsn,"2.9.3"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.HTML','Elixir.Phoenix.HTML.Engine',
                        'Elixir.Phoenix.HTML.Form',
                        'Elixir.Phoenix.HTML.FormData',
                        'Elixir.Phoenix.HTML.FormData.Plug.Conn',
                        'Elixir.Phoenix.HTML.Format',
                        'Elixir.Phoenix.HTML.Link','Elixir.Phoenix.HTML.Safe',
                        'Elixir.Phoenix.HTML.Safe.Atom',
                        'Elixir.Phoenix.HTML.Safe.BitString',
                        'Elixir.Phoenix.HTML.Safe.Date',
                        'Elixir.Phoenix.HTML.Safe.DateTime',
                        'Elixir.Phoenix.HTML.Safe.Float',
                        'Elixir.Phoenix.HTML.Safe.Integer',
                        'Elixir.Phoenix.HTML.Safe.List',
                        'Elixir.Phoenix.HTML.Safe.NaiveDateTime',
                        'Elixir.Phoenix.HTML.Safe.Time',
                        'Elixir.Phoenix.HTML.Safe.Tuple',
                        'Elixir.Phoenix.HTML.Tag']},
                   {registered,[]},
                   {applications,[plug,logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,cowlib,
                  [{description,
                       "Support library for manipulating Web protocols."},
                   {vsn,"1.0.2"},
                   {id,"git"},
                   {modules,
                       [cow_cookie,cow_date,cow_http,cow_http_hd,cow_http_te,
                        cow_mimetypes,cow_multipart,cow_qs,cow_spdy]},
                   {registered,[]},
                   {applications,[crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,asn1,
                  [{description,"The Erlang ASN1 compiler version 4.0.4"},
                   {vsn,"4.0.4"},
                   {id,[]},
                   {modules,[asn1rt,asn1rt_nif]},
                   {registered,[asn1_ns,asn1db]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,public_key,
                  [{description,"Public key infrastructure"},
                   {vsn,"1.3"},
                   {id,[]},
                   {modules,
                       [public_key,pubkey_pem,pubkey_pbe,pubkey_ssh,
                        pubkey_cert,pubkey_cert_records,pubkey_crl,
                        'OTP-PUB-KEY','PKCS-FRAME']},
                   {registered,[]},
                   {applications,[asn1,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl,
                  [{description,"Erlang/OTP SSL application"},
                   {vsn,"8.1"},
                   {id,[]},
                   {modules,
                       [tls_connection,tls_handshake,tls_record,tls_socket,
                        tls_v1,ssl_v3,ssl_v2,dtls_connection,dtls_handshake,
                        dtls_record,dtls_socket,dtls_v1,dtls_udp_listener,
                        dtls_udp_sup,ssl,tls,dtls,ssl_session_cache_api,
                        ssl_config,ssl_connection,ssl_handshake,ssl_record,
                        ssl_cipher,ssl_srp_primes,ssl_alert,
                        ssl_listen_tracker_sup,inet_tls_dist,inet6_tls_dist,
                        ssl_tls_dist_proxy,ssl_dist_sup,ssl_session,
                        ssl_session_cache,ssl_manager,ssl_pkix_db,
                        ssl_certificate,ssl_crl,ssl_crl_cache,
                        ssl_crl_cache_api,ssl_crl_hash_dir,ssl_app,ssl_sup,
                        tls_connection_sup,dtls_connection_sup]},
                   {registered,[ssl_sup,ssl_manager]},
                   {applications,[public_key,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ssl_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,ranch,
                  [{description,"Socket acceptor pool for TCP protocols."},
                   {vsn,"1.3.2"},
                   {id,[]},
                   {modules,
                       [ranch,ranch_acceptor,ranch_acceptors_sup,ranch_app,
                        ranch_conns_sup,ranch_listener_sup,ranch_protocol,
                        ranch_server,ranch_ssl,ranch_sup,ranch_tcp,
                        ranch_transport]},
                   {registered,[ranch_sup,ranch_server]},
                   {applications,[ssl,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{ranch_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,cowboy,
                  [{description,"Small, fast, modular HTTP server."},
                   {vsn,"1.1.2"},
                   {id,"git"},
                   {modules,
                       [cow_uri,cowboy,cowboy_app,cowboy_bstr,cowboy_clock,
                        cowboy_handler,cowboy_http,cowboy_http_handler,
                        cowboy_loop_handler,cowboy_middleware,cowboy_protocol,
                        cowboy_req,cowboy_rest,cowboy_router,cowboy_spdy,
                        cowboy_static,cowboy_sub_protocol,cowboy_sup,
                        cowboy_websocket,cowboy_websocket_handler]},
                   {registered,[cowboy_clock,cowboy_sup]},
                   {applications,[cowlib,ranch,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{cowboy_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,syntax_tools,
                  [{description,"Syntax tools"},
                   {vsn,"2.1.1"},
                   {id,[]},
                   {modules,
                       [epp_dodger,erl_comment_scan,erl_prettypr,
                        erl_recomment,erl_syntax,erl_syntax_lib,erl_tidy,igor,
                        merl,merl_transform,prettypr]},
                   {registered,[]},
                   {applications,[stdlib]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,xmerl,
                  [{description,"XML parser"},
                   {vsn,"1.3.12"},
                   {id,[]},
                   {modules,
                       [xmerl,xmerl_b64Bin,xmerl_b64Bin_scan,xmerl_eventp,
                        xmerl_html,xmerl_lib,xmerl_otpsgml,xmerl_regexp,
                        xmerl_sax_parser,xmerl_sax_parser_list,
                        xmerl_sax_parser_latin1,xmerl_sax_parser_utf8,
                        xmerl_sax_parser_utf16be,xmerl_sax_parser_utf16le,
                        xmerl_sax_simple_dom,xmerl_sax_old_dom,xmerl_scan,
                        xmerl_sgml,xmerl_simple,xmerl_text,xmerl_ucs,
                        xmerl_uri,xmerl_validate,xmerl_xlate,xmerl_xml,
                        xmerl_xpath,xmerl_xpath_lib,xmerl_xpath_parse,
                        xmerl_xpath_pred,xmerl_xpath_scan,xmerl_xs,xmerl_xsd,
                        xmerl_xsd_type]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,inets,
                  [{description,"INETS  CXC 138 49"},
                   {vsn,"6.3.4"},
                   {id,[]},
                   {modules,
                       [inets,inets_sup,inets_app,inets_service,inets_trace,
                        inets_lib,ftp,ftp_progress,ftp_response,ftp_sup,httpc,
                        httpc_handler,httpc_handler_sup,httpc_manager,
                        httpc_profile_sup,httpc_request,httpc_response,
                        httpc_sup,httpc_cookie,http_uri,http_chunk,
                        http_request,http_response,http_transport,http_util,
                        httpd,httpd_acceptor,httpd_acceptor_sup,httpd_cgi,
                        httpd_connection_sup,httpd_conf,httpd_custom,
                        httpd_custom_api,httpd_esi,httpd_example,httpd_file,
                        httpd_instance_sup,httpd_log,httpd_manager,
                        httpd_misc_sup,httpd_request,httpd_request_handler,
                        httpd_response,httpd_script_env,httpd_socket,
                        httpd_sup,httpd_util,mod_actions,mod_alias,mod_auth,
                        mod_auth_dets,mod_auth_mnesia,mod_auth_plain,
                        mod_auth_server,mod_browser,mod_cgi,mod_dir,
                        mod_disk_log,mod_esi,mod_get,mod_head,mod_htaccess,
                        mod_log,mod_range,mod_responsecontrol,mod_security,
                        mod_security_server,mod_trace,tftp,tftp_binary,
                        tftp_engine,tftp_file,tftp_lib,tftp_logger,tftp_sup]},
                   {registered,[inets_sup,httpc_manager]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{inets_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,mochiweb,
                  [{description,"MochiMedia Web Server"},
                   {vsn,"2.12.2"},
                   {id,[]},
                   {modules,
                       [mochifmt,mochifmt_records,mochifmt_std,mochiglobal,
                        mochihex,mochijson,mochijson2,mochilists,
                        mochilogfile2,mochinum,mochitemp,mochiutf8,mochiweb,
                        mochiweb_acceptor,mochiweb_base64url,mochiweb_charref,
                        mochiweb_cookies,mochiweb_cover,mochiweb_echo,
                        mochiweb_headers,mochiweb_html,mochiweb_http,
                        mochiweb_io,mochiweb_mime,mochiweb_multipart,
                        mochiweb_request,mochiweb_response,mochiweb_session,
                        mochiweb_socket,mochiweb_socket_server,mochiweb_util,
                        mochiweb_websocket,reloader]},
                   {registered,[]},
                   {applications,
                       [syntax_tools,xmerl,inets,ssl,crypto,compiler,stdlib,
                        kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,html_sanitize_ex,
                  [{description,"HTML sanitizer for Elixir"},
                   {vsn,"1.0.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.HtmlSanitizeEx',
                        'Elixir.HtmlSanitizeEx.Parser',
                        'Elixir.HtmlSanitizeEx.Scrubber',
                        'Elixir.HtmlSanitizeEx.Scrubber.BasicHTML',
                        'Elixir.HtmlSanitizeEx.Scrubber.CSS',
                        'Elixir.HtmlSanitizeEx.Scrubber.HTML5',
                        'Elixir.HtmlSanitizeEx.Scrubber.Meta',
                        'Elixir.HtmlSanitizeEx.Scrubber.NoScrub',
                        'Elixir.HtmlSanitizeEx.Scrubber.StripTags',
                        'Elixir.HtmlSanitizeEx.Traverser']},
                   {registered,[]},
                   {applications,[mochiweb,logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,slugger,
                  [{description,
                       "The library Slugger can generate slugs from given strings that can be used in URLs or file names.\n"},
                   {vsn,"0.1.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.Slugger','Elixir.Slugify',
                        'Elixir.Slugify.Any']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,phoenix_pubsub,
                  [{description,"Distributed PubSub and Presence platform\n"},
                   {vsn,"1.0.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Phoenix.PubSub',
                        'Elixir.Phoenix.PubSub.BroadcastError',
                        'Elixir.Phoenix.PubSub.GC',
                        'Elixir.Phoenix.PubSub.Local',
                        'Elixir.Phoenix.PubSub.LocalSupervisor',
                        'Elixir.Phoenix.PubSub.PG2',
                        'Elixir.Phoenix.PubSub.PG2Server',
                        'Elixir.Phoenix.PubSub.Supervisor',
                        'Elixir.Phoenix.Tracker',
                        'Elixir.Phoenix.Tracker.Clock',
                        'Elixir.Phoenix.Tracker.DeltaGeneration',
                        'Elixir.Phoenix.Tracker.Replica',
                        'Elixir.Phoenix.Tracker.State']},
                   {registered,[]},
                   {applications,[crypto,logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Phoenix.PubSub.Supervisor',[]}}]}]}},
     {apply,
         {application,load,
             [{application,combine,
                  [{description,
                       "A parser combinator library for Elixir projects."},
                   {vsn,"0.9.6"},
                   {id,[]},
                   {modules,
                       ['Elixir.Combine','Elixir.Combine.Helpers',
                        'Elixir.Combine.ParserState',
                        'Elixir.Combine.Parsers.Base',
                        'Elixir.Combine.Parsers.Binary',
                        'Elixir.Combine.Parsers.Text']},
                   {registered,[]},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,metrics,
                  [{description,
                       "A generic interface to different metrics systems in Erlang."},
                   {vsn,"1.0.1"},
                   {id,[]},
                   {modules,
                       [metrics,metrics_dummy,metrics_exometer,
                        metrics_folsom]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,ssl_verify_fun,
                  [{description,[]},
                   {vsn,"1.1.1"},
                   {id,[]},
                   {modules,
                       [ssl_verify_fingerprint,ssl_verify_hostname,
                        ssl_verify_pk,ssl_verify_util]},
                   {registered,[]},
                   {applications,[ssl,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,certifi,
                  [{description,"An OTP library"},
                   {vsn,"1.1.0"},
                   {id,[]},
                   {modules,[certifi,certifi_cacerts,certifi_weakcerts]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,mimerl,
                  [{description,"An OTP library"},
                   {vsn,"1.0.2"},
                   {id,[]},
                   {modules,[mimerl]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,idna,
                  [{description,"A pure Erlang IDNA implementation"},
                   {vsn,"4.0.0"},
                   {id,[]},
                   {modules,
                       [idna,idna_ucs,idna_unicode,idna_unicode_data,
                        punycode]},
                   {registered,[]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity}]}]}},
     {apply,
         {application,load,
             [{application,hackney,
                  [{description,"simple HTTP client"},
                   {vsn,"1.8.0"},
                   {id,[]},
                   {modules,
                       [hackney,hackney_app,hackney_bstr,hackney_connect,
                        hackney_cookie,hackney_date,hackney_headers,
                        hackney_headers_new,hackney_http,hackney_http_connect,
                        hackney_local_tcp,hackney_manager,hackney_multipart,
                        hackney_pool,hackney_pool_handler,hackney_request,
                        hackney_response,hackney_socks5,hackney_ssl,
                        hackney_stream,hackney_sup,hackney_tcp,hackney_trace,
                        hackney_url,hackney_util]},
                   {registered,[hackney_pool]},
                   {applications,
                       [metrics,ssl_verify_fun,certifi,mimerl,idna,ssl,
                        public_key,asn1,crypto,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{timeout,150000},
                        {max_connections,50},
                        {restart,permanent},
                        {shutdown,10000},
                        {maxr,10},
                        {maxt,1}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{hackney_app,[]}}]}]}},
     {apply,
         {application,load,
             [{application,tzdata,
                  [{description,
                       "Tzdata is a parser and library for the tz database.\n"},
                   {vsn,"0.5.12"},
                   {id,[]},
                   {modules,
                       ['Elixir.Tzdata','Elixir.Tzdata.App',
                        'Elixir.Tzdata.BasicDataMap',
                        'Elixir.Tzdata.DataBuilder',
                        'Elixir.Tzdata.DataLoader','Elixir.Tzdata.EtsHolder',
                        'Elixir.Tzdata.FarFutureDynamicPeriods',
                        'Elixir.Tzdata.LeapSecParser','Elixir.Tzdata.Parser',
                        'Elixir.Tzdata.ParserOrganizer',
                        'Elixir.Tzdata.PeriodBuilder',
                        'Elixir.Tzdata.ReleaseReader',
                        'Elixir.Tzdata.ReleaseUpdater',
                        'Elixir.Tzdata.TableData','Elixir.Tzdata.TableParser',
                        'Elixir.Tzdata.Util']},
                   {registered,[]},
                   {applications,[hackney,logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{autoupdate,enabled},{data_dir,nil}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Tzdata.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,gettext,
                  [{description,
                       "Internationalization and localization through gettext"},
                   {vsn,"0.13.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Gettext','Elixir.Gettext.Application',
                        'Elixir.Gettext.Backend','Elixir.Gettext.Compiler',
                        'Elixir.Gettext.Error','Elixir.Gettext.Extractor',
                        'Elixir.Gettext.ExtractorAgent',
                        'Elixir.Gettext.Fuzzy','Elixir.Gettext.Interpolation',
                        'Elixir.Gettext.Merger',
                        'Elixir.Gettext.MissingBindingsError',
                        'Elixir.Gettext.PO','Elixir.Gettext.PO.Parser',
                        'Elixir.Gettext.PO.PluralTranslation',
                        'Elixir.Gettext.PO.SyntaxError',
                        'Elixir.Gettext.PO.Tokenizer',
                        'Elixir.Gettext.PO.Translation',
                        'Elixir.Gettext.PO.Translations',
                        'Elixir.Gettext.Plural',
                        'Elixir.Gettext.Plural.UnknownLocaleError',
                        'Elixir.Mix.Tasks.Compile.Gettext',
                        'Elixir.Mix.Tasks.Gettext.Extract',
                        'Elixir.Mix.Tasks.Gettext.Merge',gettext_po_parser]},
                   {registered,[]},
                   {applications,[logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{default_locale,<<"en">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Gettext.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,timex,
                  [{description,
                       "Timex is a rich, comprehensive Date/Time library for Elixir projects, with full timezone support via the :tzdata package.\nIf you need to manipulate dates, times, datetimes, timestamps, etc., then Timex is for you!\n"},
                   {vsn,"3.1.13"},
                   {id,[]},
                   {modules,
                       ['Elixir.Enumerable.Timex.Interval',
                        'Elixir.Inspect.DateTime',
                        'Elixir.Inspect.Timex.AmbiguousDateTime',
                        'Elixir.Inspect.Timex.AmbiguousTimezoneInfo',
                        'Elixir.Inspect.Timex.Duration',
                        'Elixir.Inspect.Timex.TimezoneInfo','Elixir.Timex',
                        'Elixir.Timex.AmbiguousDateTime',
                        'Elixir.Timex.AmbiguousTimezoneInfo',
                        'Elixir.Timex.Calendar.Julian',
                        'Elixir.Timex.Comparable',
                        'Elixir.Timex.Comparable.Date',
                        'Elixir.Timex.Comparable.DateTime',
                        'Elixir.Timex.Comparable.Diff',
                        'Elixir.Timex.Comparable.NaiveDateTime',
                        'Elixir.Timex.Comparable.Timex.AmbiguousDateTime',
                        'Elixir.Timex.Comparable.Tuple',
                        'Elixir.Timex.Comparable.Utils',
                        'Elixir.Timex.Constants','Elixir.Timex.Convert',
                        'Elixir.Timex.DateTime.Helpers',
                        'Elixir.Timex.Duration',
                        'Elixir.Timex.Format.DateTime.Formatter',
                        'Elixir.Timex.Format.DateTime.Formatters.Default',
                        'Elixir.Timex.Format.DateTime.Formatters.Relative',
                        'Elixir.Timex.Format.DateTime.Formatters.Strftime',
                        'Elixir.Timex.Format.Duration.Formatter',
                        'Elixir.Timex.Format.Duration.Formatters.Default',
                        'Elixir.Timex.Format.Duration.Formatters.Humanized',
                        'Elixir.Timex.Format.FormatError',
                        'Elixir.Timex.Gettext','Elixir.Timex.Helpers',
                        'Elixir.Timex.Interval',
                        'Elixir.Timex.Interval.FormatError',
                        'Elixir.Timex.Macros',
                        'Elixir.Timex.Parse.DateTime.Helpers',
                        'Elixir.Timex.Parse.DateTime.Parser',
                        'Elixir.Timex.Parse.DateTime.Parsers',
                        'Elixir.Timex.Parse.DateTime.Parsers.ISO8601Extended',
                        'Elixir.Timex.Parse.DateTime.Tokenizer',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Default',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Directive',
                        'Elixir.Timex.Parse.DateTime.Tokenizers.Strftime',
                        'Elixir.Timex.Parse.Duration.Parser',
                        'Elixir.Timex.Parse.Duration.Parsers.ISO8601Parser',
                        'Elixir.Timex.Parse.ParseError',
                        'Elixir.Timex.Parse.Timezones.Posix',
                        'Elixir.Timex.Parse.Timezones.Posix.PosixTimezone',
                        'Elixir.Timex.Parse.ZoneInfo.Parser',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.Header',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.LeapSecond',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo',
                        'Elixir.Timex.Parse.ZoneInfo.Parser.Zone',
                        'Elixir.Timex.Protocol','Elixir.Timex.Protocol.Any',
                        'Elixir.Timex.Protocol.Date',
                        'Elixir.Timex.Protocol.DateTime',
                        'Elixir.Timex.Protocol.Map',
                        'Elixir.Timex.Protocol.NaiveDateTime',
                        'Elixir.Timex.Protocol.Tuple','Elixir.Timex.Time',
                        'Elixir.Timex.Timezone','Elixir.Timex.Timezone.Local',
                        'Elixir.Timex.Timezone.Utils',
                        'Elixir.Timex.TimezoneInfo','Elixir.Timex.Translator',
                        'Elixir.Timex.Types']},
                   {registered,[]},
                   {applications,
                       [combine,tzdata,gettext,logger,elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{local_timezone,nil},{default_locale,<<"en">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Timex',[]}}]}]}},
     {apply,
         {application,load,
             [{application,runtime_tools,
                  [{description,"RUNTIME_TOOLS"},
                   {vsn,"1.11"},
                   {id,[]},
                   {modules,
                       [appmon_info,dbg,observer_backend,percept_profile,
                        runtime_tools,runtime_tools_sup,erts_alloc_config,
                        ttb_autostart,dyntrace,system_information,msacc]},
                   {registered,[runtime_tools_sup]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{runtime_tools,[]}}]}]}},
     {apply,
         {application,load,
             [{application,quest,
                  [{description,"quest"},
                   {vsn,"0.0.1"},
                   {id,[]},
                   {modules,
                       ['Elixir.Quest.Application','Elixir.Quest.Main',
                        'Elixir.Quest.Main.Option',
                        'Elixir.Quest.Main.Question',
                        'Elixir.Quest.Main.Questionnaire',
                        'Elixir.Quest.Main.Submission',
                        'Elixir.Quest.PageHelper','Elixir.Quest.Repo',
                        'Elixir.Quest.Static','Elixir.Quest.Static.Page',
                        'Elixir.Quest.Web','Elixir.Quest.Web.Endpoint',
                        'Elixir.Quest.Web.ErrorHelpers',
                        'Elixir.Quest.Web.ErrorView',
                        'Elixir.Quest.Web.Gettext',
                        'Elixir.Quest.Web.LayoutView',
                        'Elixir.Quest.Web.OptionController',
                        'Elixir.Quest.Web.OptionView',
                        'Elixir.Quest.Web.PageController',
                        'Elixir.Quest.Web.PageView',
                        'Elixir.Quest.Web.QuestionController',
                        'Elixir.Quest.Web.QuestionView',
                        'Elixir.Quest.Web.QuestionnaireController',
                        'Elixir.Quest.Web.QuestionnaireView',
                        'Elixir.Quest.Web.Router',
                        'Elixir.Quest.Web.Router.Helpers',
                        'Elixir.Quest.Web.SubmissionController',
                        'Elixir.Quest.Web.SubmissionView',
                        'Elixir.Quest.Web.UserSocket',
                        'Elixir.StringGenerator','Elixir.TypeCheck']},
                   {registered,[]},
                   {applications,
                       [phoenix_ecto,distillery,postgrex,phoenix_live_reload,
                        phoenix,phoenix_html,cowboy,html_sanitize_ex,slugger,
                        phoenix_pubsub,timex,gettext,runtime_tools,logger,
                        elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,[]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.Quest.Application',[]}}]}]}},
     {apply,
         {application,load,
             [{application,iex,
                  [{description,"iex"},
                   {vsn,"1.4.0"},
                   {id,[]},
                   {modules,
                       ['Elixir.IEx','Elixir.IEx.App',
                        'Elixir.IEx.Autocomplete','Elixir.IEx.CLI',
                        'Elixir.IEx.Config','Elixir.IEx.Evaluator',
                        'Elixir.IEx.Helpers','Elixir.IEx.History',
                        'Elixir.IEx.History.State','Elixir.IEx.Info',
                        'Elixir.IEx.Info.Any','Elixir.IEx.Info.Atom',
                        'Elixir.IEx.Info.BitString','Elixir.IEx.Info.Float',
                        'Elixir.IEx.Info.Function','Elixir.IEx.Info.Integer',
                        'Elixir.IEx.Info.List','Elixir.IEx.Info.Map',
                        'Elixir.IEx.Info.PID','Elixir.IEx.Info.Port',
                        'Elixir.IEx.Info.Reference','Elixir.IEx.Info.Tuple',
                        'Elixir.IEx.Introspection','Elixir.IEx.Remsh',
                        'Elixir.IEx.Server','Elixir.IEx.State']},
                   {registered,['Elixir.IEx.Supervisor','Elixir.IEx.Config']},
                   {applications,[elixir,stdlib,kernel]},
                   {included_applications,[]},
                   {env,
                       [{colors,[]},
                        {inspect,[{pretty,true}]},
                        {history_size,20},
                        {default_prompt,<<"%prefix(%counter)>">>},
                        {alive_prompt,<<"%prefix(%node)%counter>">>}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{'Elixir.IEx.App',[]}}]}]}},
     {apply,
         {application,load,
             [{application,sasl,
                  [{description,"SASL  CXC 138 11"},
                   {vsn,"3.0.2"},
                   {id,[]},
                   {modules,
                       [sasl,alarm_handler,format_lib_supp,misc_supp,rb,
                        rb_format_supp,release_handler,release_handler_1,
                        erlsrv,sasl_report,sasl_report_tty_h,
                        sasl_report_file_h,si,si_sasl_supp,systools,
                        systools_make,systools_rc,systools_relup,
                        systools_lib]},
                   {registered,[sasl_sup,alarm_handler,release_handler]},
                   {applications,[stdlib,kernel]},
                   {included_applications,[]},
                   {env,[{sasl_error_logger,tty},{errlog_type,all}]},
                   {maxT,infinity},
                   {maxP,infinity},
                   {mod,{sasl,[]}}]}]}},
     {progress,applications_loaded},
     {apply,{application,start_boot,[kernel,permanent]}},
     {apply,{application,start_boot,[stdlib,permanent]}},
     {apply,{application,start_boot,[poolboy,permanent]}},
     {apply,{application,start_boot,[compiler,permanent]}},
     {apply,{application,start_boot,[elixir,permanent]}},
     {apply,{application,start_boot,[decimal,permanent]}},
     {apply,{application,start_boot,[logger,permanent]}},
     {apply,{application,start_boot,[ecto,permanent]}},
     {apply,{application,start_boot,[mime,permanent]}},
     {apply,{application,start_boot,[crypto,permanent]}},
     {apply,{application,start_boot,[plug,permanent]}},
     {apply,{application,start_boot,[phoenix_ecto,permanent]}},
     {apply,{application,start_boot,[distillery,permanent]}},
     {apply,{application,start_boot,[connection,permanent]}},
     {apply,{application,start_boot,[db_connection,permanent]}},
     {apply,{application,start_boot,[postgrex,permanent]}},
     {apply,{application,start_boot,[fs,permanent]}},
     {apply,{application,start_boot,[eex,permanent]}},
     {apply,{application,start_boot,[poison,permanent]}},
     {apply,{application,start_boot,[phoenix,permanent]}},
     {apply,{application,start_boot,[phoenix_live_reload,permanent]}},
     {apply,{application,start_boot,[phoenix_html,permanent]}},
     {apply,{application,start_boot,[cowlib,permanent]}},
     {apply,{application,start_boot,[asn1,permanent]}},
     {apply,{application,start_boot,[public_key,permanent]}},
     {apply,{application,start_boot,[ssl,permanent]}},
     {apply,{application,start_boot,[ranch,permanent]}},
     {apply,{application,start_boot,[cowboy,permanent]}},
     {apply,{application,start_boot,[syntax_tools,permanent]}},
     {apply,{application,start_boot,[xmerl,permanent]}},
     {apply,{application,start_boot,[inets,permanent]}},
     {apply,{application,start_boot,[mochiweb,permanent]}},
     {apply,{application,start_boot,[html_sanitize_ex,permanent]}},
     {apply,{application,start_boot,[slugger,permanent]}},
     {apply,{application,start_boot,[phoenix_pubsub,permanent]}},
     {apply,{application,start_boot,[combine,permanent]}},
     {apply,{application,start_boot,[metrics,permanent]}},
     {apply,{application,start_boot,[ssl_verify_fun,permanent]}},
     {apply,{application,start_boot,[certifi,permanent]}},
     {apply,{application,start_boot,[mimerl,permanent]}},
     {apply,{application,start_boot,[idna,permanent]}},
     {apply,{application,start_boot,[hackney,permanent]}},
     {apply,{application,start_boot,[tzdata,permanent]}},
     {apply,{application,start_boot,[gettext,permanent]}},
     {apply,{application,start_boot,[timex,permanent]}},
     {apply,{application,start_boot,[runtime_tools,permanent]}},
     {apply,{application,start_boot,[quest,permanent]}},
     {apply,{application,start_boot,[iex,permanent]}},
     {apply,{application,start_boot,[sasl,permanent]}},
     {apply,{c,erlangrc,[]}},
     {progress,started}]}.
